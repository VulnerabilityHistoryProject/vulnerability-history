<p id="notice"><%= notice %></p>

<%= render('shared/title') do %>
  Known Offenders
<% end %>

<%= render('shared/grid', size: 6) do %>
<p>
  A <b>known offender</b> is a file that has been fixed for a vulnerabilty at any point in history.
</p>
<p class="text-center">
  Click on a file to learn more.
</p>
<% end %>

<style>
svg {
  font: 10px sans-serif;
  border: 1px solid #ccc;
}

svg path {
  stroke: #ccc;
}
</style>


<%= render('shared/grid', size: 10) do %>
  <div id="offenders_map"></div>
<% end %>


<script>

function click(d) {
  svg.transition()
      .duration(750)
      .tween("scale", function() {
        var xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),
            yd = d3.interpolate(y.domain(), [d.y, 1]),
            yr = d3.interpolate(y.range(), [d.y ? 20 : 0, radius]);
        return function(t) { x.domain(xd(t)); y.domain(yd(t)).range(yr(t)); };
      })
    .selectAll("path")
      .attrTween("d", function(d) { return function() { return arc(d); }; });
}

$.ajax({
  url: "/api/filepaths?offenders=true",
  dataType: 'json',
  success: function(jsonData) {
    // Generate parent directories
    jsonData['/'] = ''; // root directory
    for (filepath in jsonData) {
      current = filepath;
      while(current.indexOf('/') > 0) {
        current = current.substring(0, current.lastIndexOf('/'));
        jsonData[current] = jsonData[current] || ''; // Ruby ||=
      }
    }
    // Convert from hash to array of hashes
    arrayData = [];
    for (filepath in jsonData) {
      arrayData.push({
        'filepath' : filepath,
        'num' : jsonData[filepath]
      });
    }
    //Sort the data
    arrayData.sort(function(a,b){
      return (a.filepath > b.filepath) ? 1 : ((b.filepath > a.filepath) ? -1 : 0);
    });

    var stratify = d3.stratify()
      .parentId(function (d) {
        if(d.filepath == '/') return null;
        if(d.filepath.indexOf('/') > 0) { // non-root file
          return d.filepath.substring(0, d.filepath.lastIndexOf('/'));
        } else { //root file
          return '/';
        }
      })
      .id(function (d) {
        return d.filepath;
      });

    root = stratify(arrayData);

    root.sum(function(d) { return d.num });
    console.log(root)

    //Init SVG
    var width = 960,
        height = 700,
        radius = Math.min(width, height) / 2;
    var g = d3.select("#offenders_map").append("svg:svg")
      .attr("width", width)
      .attr("height", height)
      .append('g')
        .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');

    //Size the arcs
    var partition = d3.partition().size([2 * Math.PI, radius]);
    partition(root)
    var arc = d3.arc()
      .startAngle(function (d) { return d.x0 })
      .endAngle(function (d)  { return d.x1 })
      .innerRadius(function (d) { return d.y0 })
      .outerRadius(function (d) { return d.y1 });

    // Create color scheme
    var color = d3.scaleOrdinal(d3.schemeCategory20b);

    // Put it all together
    g.selectAll('path')
        .data(root.descendants())
        .enter().append('path')
        .attr("display", function (d) { return d.depth ? null : "none"; })
        .attr("d", arc)
        .style('stroke', '#ccc')
        .style("fill", function (d) { return color((d.children ? d : d.parent).data.name); });
  }
});


</script>

<!-- <%= @filepaths.to_a %> -->

<!-- <%= render 'shared/loading' =%>

<table id="datatable" class="display" width="100%">
  <thead></thead>
  <tbody></tbody>
  <tfoot></tfoot>
</table>

<%= javascript_include_tag "filepaths/index" %> -->
