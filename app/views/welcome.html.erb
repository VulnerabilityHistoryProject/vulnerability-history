<div class="welcome grid-x">
  <div class="cell">
    <h1 class="centered-title">The Vulnerability History Project</h1>
  </div>
</div>

<div class="welcome grid-x">
  <div class="subtitle cell text-center">
    A museum of mistakes.
    <p>For software engineers, and anyone else who wants to learn.</p>
  </div>
</div>


<div class="welcome grid-x grid-padding-x align-center">

  <div class="quip cell medium-5">
    <div class="grid-x grid-margin-x">
      <div class="cell medium-6">
        <h3>Watch your dependencies</h3>
        <p>Not every security mistake is your fault. Sometimes a vulnerability
           will arise in a library that you depend upon. Does it affect you?
           Will you work around it? How will you know?</p>
        <p>Learn more by example on vulnerabilities tagged with DEPS files has
           changed</p>
      </div>
      <div class="cell medium-6"><%=image_tag("purple_trianglify-square.png")%></div>
    </div>
  </div>

  <div class="quip cell medium-6">
    <div class="grid-x grid-margin-x">
      <div class="cell medium-6">
        <h3>Bad things happen when integers wrap around</h3>
        <p>Loop counters, file sizes, malloc arguments, session tokens, primary
           keys.... numbers are everywhere in our code. When we're working with
           integers, what happens when that our numbers get very, very big?</p>
        <p>Integer overflow, or wraparound, is much more dangerous than it
           seems. Learn more about it and <a href="/tags/1">explore some
          examples.</a></p>
      </div>
      <div class="cell medium-6">
        <img src="https://placehold.it/300x250">
      </div>
    </div>
  </div>
</div>

<hr>

<div class="welcome grid-x grid-padding-x align-center">

  <div class="quip cell medium-3">
    <div class="grid-y">
      <div class="cell medium-5"><%=image_tag("eroded.jpg")%></div>
      <div class="cell medium-7">
        <h3>Be careful with environment variables</h3>
        <p>Environment variables are great features for custom configuration,
           when handled properly. When gone wrong, environment variables allow
           for side-loading in malicious code, build file problems, and various
           other effects.</p>
        <p>Treat data from environment variables with respect. Learn more and
           see examples of vulnerabilities that involve environment variables.</p>
      </div>
    </div>
  </div>

  <div class="quip cell medium-3">
    <div class="grid-y grid-margin-y">
      <div class="cell medium-6">
        <div class="cell medium-5"><%=image_tag("money.jpg")%></div>
      </div>
      <div class="cell medium-6">
        <h3>How much is it worth to you?</h3>
        <p>Bounty awards are when the development team awards a user for reporting a vulnerability. The more severe the problem, the bigger the reward.</p>
        <p>What brings in more money? And how much are they usually worth?
          <a href="/tags/1">
            <i class="fi-pricetag-multiple" style="color:
              #25C322"></i>Explore vulnerabilities that were awarded a bounty</a>
        </p>
      </div>
    </div>
  </div>

  <div class="quip cell medium-3">
    <div class="grid-y grid-margin-y">
      <div class="cell medium-6">
        <img src="https://placehold.it/1000x667">
      </div>
      <div class="cell medium-6">
        <h3>What the fuzz?</h3>
        <p>Random testing, also called fuzzing, is a widely-used technique for
           discovering bugs automatically. Fuzz testing programs will look for
           weaknesses by intelligently generating random inputs and executing
           the system repeatedly on those inputs.</p>
        <p>While quite useful for finding hard-to-reach bugs, fuzzing is only
          effective for finding certain kinds of vulnerabilities. See what kinds
          of vulnerabilities are found by fuzzers.</a>
        </p>
      </div>
    </div>
  </div>

</div>

<hr>

<div class="welcome grid-x grid-margin-x grid-padding-x align-center">

  <div class="quip-big cell medium-8">
    <div class="grid-x grid-margin-x">
      <div class="cell medium-5">
        <h3>Beware of complex inputs</h3>
        <p>Many vulnerabilities have occurred when a program is trying to
          process input that involves complexity, like an expressive language,
          a deeply-nested structure, or an intricate compression algorithms.
          Embedded fonts, URLs, video media, vector graphics, query strings,
          custom protocols, and raster graphics are just a few examples of being
          deceptively complex inputs that led to vulnerabilities.
        </p>
        <p>Don't just think about code complexity, think about input complexity.
          See some examples here.</p>
      </div>
      <div class="cell medium-7"><%=image_tag("redorange_trianglify.png")%></div>
    </div>
  </div>

</div>

<%= javascript_include_tag "welcome/index" %>
