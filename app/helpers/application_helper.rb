require 'coderay'
require 'yaml'
require 'kramdown'
require 'rinku'
require 'sanitize'

module ApplicationHelper
  def markdown(source)
    # We markdownify FIRST because Rinku won't recognize markdown.
    markdownified = Kramdown::Document.new(source).to_html

    # Rinku will find any URLs not already in <a> tags and link em
    html = Rinku.auto_link(markdownified, mode=:all, link_attr=nil, skip_tags=nil)

    # We sanitize AFTER everything is transformed, and Sanitize is smart enough to
    # allow only certain kinds of links. We need to allow links, hence BASIC.
    # See https://github.com/rgrove/sanitize for configs.
    scrubbed = Sanitize.fragment(html, Sanitize::Config::BASIC)
    raw(scrubbed).html_safe
  end

  def pretty_code(str)
    CodeRay.scan(str.to_yaml, :yaml).div(:line_numbers => :table)
  end

  def pretty_date(source)
    source.strftime('%a %d %b %Y')
  end
end
