import $ from 'jquery'
import _ from 'lodash'
import 'datatables.net'
import 'datatables.net-responsive-dt'
import 'datatables.net-zf'
import {hideSinglePagePagination} from 'global/datatablesTweaks'
import {vulnProject, vulnName, ellipsizedFilepath} from 'global/dataToPrettyStrings'

export function OffenderTable(offenders){

    this.offenders = offenders;
    this.project_id = 0; //project_id 0 is "all" projects

    this.init = function() {
        this.buildTopNav();
        this.rebuild(this.offenders);
    }

    this.buildTopNav = function() {
        
        // $('#datatable_wrapper').prepend('<div id="table-nav-top"></div>');
        // const nav = $('#table-nav-top');
        // nav.addClass('table-nav grid-x');

        // const nav_length = $('#datatable_length');
        // nav_length.addClass('table-nav-show-entries cell small-2')
        // nav.append(nav_length);

        // const nav_search = $('#datatable_filter label');
        // nav_search.addClass('table-nav-search cell small-3')
        // nav.append(nav_search);
    }    

    this.languageInfo = function() {
        const searchSuggestions = [
            'clipboard',
            'gpu',
            'cpp',
            'xml',
            'util',
            'Makefile'
        ]
        return {
            search: "", // nothing in the placeholder;
            searchPlaceholder: `Try "${_.sample(searchSuggestions)}"`,
            lengthMenu: "_MENU_",
            info: "Showing _START_ to _END_ of _TOTAL_ offenders",
            infoEmpty: "Showing 0 to 0 of 0 entries",
            infoFiltered: "(filtered from _MAX_ total offenders)",
        };
    }

    this.renderAsLink = function(data, row) {
        return `<a class="dt_row" href="/filepaths/${row.slug}">${data}</a>`;
    }

    this.renderFilepathCell = function(row){
        const prefixLen = 20
        const maxLen = 75
        const fp = ellipsizedFilepath(row.filepath, prefixLen, maxLen)
        const filepathStr = `
            <a href="/filepaths/${row.slug}" class="filepath">${fp}</a>
        `

        const reducer = function(str, vals, cve){
            let shade = ''
            if(vals.upvotes == 0)      { shade = 'none' } 
            else if(vals.upvotes < 10) { shade = 'low'  }
            else if(vals.upvotes < 20) { shade = 'medium'  }
            else                       { shade = 'high'  }
            const newItemStr = `
            <li>
                <span data-tooltip tabindex="1" title="Has ${vals.upvotes} upvotes">
                <a class="upvotes-${shade}" 
                   href="/cves/${cve}">${vals.nickname} ${cve}</a>
                </span>
            </li>
            `
            return str + newItemStr
        }
        const itemStr = _.reduce(row.cves, reducer, "")
        const cveListStr = `<ul class="cve-listing">${itemStr}</ul>`
        return filepathStr + cveListStr
    }

    this.rebuild = function(jsonData){
        $('#offenderTable').DataTable({
            responsive: true,
            // dom: 'lfrtip', // defines the overall DOM structure, see https://datatables.net/reference/option/dom
            destroy: true,
            autoWidth: false,
            data: jsonData,
            order: [[2, "desc"]], /* Default sort */
            preDrawCallback: (settings) => hideSinglePagePagination(settings),
            columns:  [
                {
                    title: 'Project',
                    data: null,
                    defaultContent: '',
                    className: 'project',
                    responsivePriority: 2,
                    width: "8em",
                    render: (data, type, row) => this.renderAsLink(vulnProject(data) + data.project_name, row)
                },
                {
                    title: 'File & Vulnerabilities',
                    data: null,
                    defaultContent: '',
                    className: 'filepath',
                    responsivePriority: 1,
                    render: (data, _type, _row) => this.renderFilepathCell(data)
                },
                {
                    title: 'Num. Fixes',
                    data: 'num_fixes',
                    defaultContent: '',
                    responsivePriority: 3,
                    width: '5em',
                    render: (data, type, row) => this.renderAsLink(data, row)
                },
                {
                    title: 'Num. CVEs',
                    data: 'num_cves',
                    defaultContent: '',
                    responsivePriority: 4,
                    width: '5em',
                    render: (data, type, row) => this.renderAsLink(data, row)
                },
            ],
            language: this.languageInfo(),
            initComplete: function () {
                $('#loading').remove();
            }
        });
    }
}
