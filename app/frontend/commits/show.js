import $ from 'jquery'
import 'datatables.net'
import 'datatables.net-responsive-dt'
import 'datatables.net-zf'
import {hideSinglePagePagination} from 'global/datatablesTweaks'

$(document).ready( function() {
  var filepaths_div = document.getElementById("filepaths");
  var elements = filepaths_div.getElementsByTagName("li");
  for(let i=0; i<elements.length; i++){
    var list_item = elements[i];
    var svg = d3.select('#churn-bar-'+list_item.id).append("svg:svg");
    svg.attr('width', 200);
    svg.attr('height', 25);
    svg.append('rect')
         .attr('x', 0)
         .attr('y', 0)
         .attr('width', 200)
         .attr('height', 25)
         .attr('fill', '#fff')
         .attr('id','inserted-'+list_item.id);
    svg.append('rect')
         .attr('x', -100)
         .attr('y', 0)
         .attr('width', 200)
         .attr('height', 25)
         .attr('fill', '#fff')
         .attr('id','deleted-'+list_item.id);
         var inserts = $('#filepath_insert_'+list_item.id).text();
         var deletes = $('#filepath_delete_'+list_item.id).text();
         var num_inserts = parseInt(inserts.slice(1));
         var num_deletes = parseInt(deletes.slice(1));
         midpoint = (200 * num_inserts / num_deletes);
         if(midpoint == 200){
           midpoint = 100;
         }
         gap_between = 2;

         d3.selectAll('#inserted-'+list_item.id)
          .attr('width', midpoint )
          .attr('fill', '#4AB808' );

         d3.selectAll('#deleted-'+list_item.id)
          .attr('x', midpoint + gap_between )
          .attr('width', 200 - midpoint - gap_between )
          .attr('fill', '#D32009' );
  }


  // If mouse movement is detected, then the user is hopefully not a bot
  var input_detected = false;
  $(document).mousemove(function(event) {
      input_detected = true;
      $(document).off("mousemove");
  });

  // If keyboard input is detected, then the user is hopefully not a bot
  $(document).keypress(function(event) {
      input_detected = true;
      $(document).off("keypress");
  });

  $('#email_fetch').on('click', function() {
        if (!input_detected) {
          alert("We haven't detected any keyboard or mouse input from you. "
                + "To display the email address, please first show us you're not a bot.");
          return;
        }

        $.ajax({
            url: "/api/developers/" + $('#developer_id').text(),
            dataType: 'json',
            success: function(jsonData) {
              $('#email_fetch').hide();
              $('#developer_email')
                .html(jsonData.email)
                .show();
              $('#github_search')
                .prop('href', "https://github.com/search?q=" + jsonData.email + "&type=Users")
                .html("<i class=\"vhp-icon-github\"></i> Search for " + jsonData.email + " on GitHub")
                .show();
            },
            error: function() {
              if ($('#email_fetch').html() == "Failed. Retry?") {
                $('#email_fetch').html("Retry again?");
              } else {
                $('#email_fetch').html("Failed. Retry?");
              }
            }
        });
    });
});
