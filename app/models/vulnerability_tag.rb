# Represents the association between a vulnerability and a tag
class VulnerabilityTag < ApplicationRecord
  belongs_to :tag,           foreign_key: 'tag_id'
  belongs_to :vulnerability, foreign_key: 'vulnerability_id'

  def self.correlations(tags = [])
    # tags = ['bounty', 'big-fix', 'cooks']
    # this is gross. wish there was a better, less injecty way
    tag_str = "'#{tags.join("','")}'"
    sql = <<~EOSQL
      SELECT t1.shortname AS tag1,
            t2.shortname AS tag2,
           COUNT(*) AS num
       FROM
         vulnerability_tags vt1 INNER JOIN tags t1 ON t1.id = vt1.tag_id,
         vulnerability_tags vt2 INNER JOIN tags t2 ON t2.id = vt2.tag_id
       WHERE vt1.vulnerability_id = vt2.vulnerability_id
       AND t1.shortname < t2.shortname
       AND t1.shortname = ANY(ARRAY[#{tag_str}]::text[])
       AND t2.shortname = ANY(ARRAY[#{tag_str}]::text[])
       GROUP BY t1.shortname, t2.shortname
       EOSQL

    # connection.exec_prepared('correlations', [tags, tags])
    connection.exec_query(sql, [tags.join(','), tags.join(',')])
    # ActiveRecord::Base.connection.exec_query(sql, binds = [tags, tags])
  end
end
