class Vulnerability < ApplicationRecord
  has_many :vccs, foreign_key: 'vulnerability_id'
  has_many :fixes, foreign_key: 'vulnerability_id'
  has_many :events, as: :detail
  has_many :vulnerability_tags, foreign_key: 'vulnerability_id'
  has_many :tags, through: :vulnerability_tags

  def self.list_all(short_descriptions)
    @vs = Vulnerability.
      left_outer_joins(:tags).
      select("vulnerabilities.id as id").
      select("vulnerabilities.cve as cve").
      select("vulnerabilities.announced").
      select("vulnerabilities.upvotes").
      select("STRING_AGG(tags.name,', ') AS tag_names").
      group('vulnerabilities.id').
      order('vulnerabilities.upvotes desc')
    if short_descriptions
      @vs.select("
        substring(vulnerabilities.description from 0 for 140) || '...' 
        as short_desc
      ")
    else
      @vs.select('vulnerabilities.description as description')
    end
  end

  # Required for Event model
  def title
    cve
  end

  # Event: description is just the description field

  # Required for Event model
  def date
    announced
  end

  # Required for Event model
  def type
    "vulnerability"
  end

end
