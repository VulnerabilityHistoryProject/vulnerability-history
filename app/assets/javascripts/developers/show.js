function buildTopNav() {
    $('#datatable_wrapper').prepend('<div id="table-nav-top"></div>');
    const nav = $('#table-nav-top');
    nav.addClass('table-nav grid-x');

    const nav_length = $('#datatable_length');
    nav_length.addClass('table-nav-show-entries cell small-9')
    nav.append(nav_length);

    const nav_search = $('#datatable_filter label');
    nav_search.addClass('table-nav-search cell small-3')
    nav.append(nav_search);
}

function languageInfo() {
    return {
        search: "", // nothing in the placeholder;
        searchPlaceholder: 'Search',
        lengthMenu: "Show _MENU_",
        info: "Showing _START_ to _END_ of _TOTAL_ commits",
        infoEmpty: "Showing 0 to 0 of 0 entries",
        infoFiltered: "(filtered from _MAX_ total commits)",
    };
}

function initHPunchline(){
  settings = {
    chicHeight: 14,
    chicWidth: 20,
    minDate: new Date(2018, 1, 1),
    maxDate: new Date(),
  }

  var punch = new punchline(settings);
  punch.init();
  return punch;
}

$(document).ready( function() {
    punch = initHPunchline();

    $.ajax({
        url: "/api/developers/" + $('#developer_id').text() + "/commits",
        dataType: 'json',
        success: function(jsonData) {
            $('#hpunchline-loading').remove();
            punch.plotActivities();

            $('#datatable').dataTable({
                destroy: true,
                data: jsonData,
                order: [[1, "asc"]],
                language: languageInfo(),
                rowCallback: function(row, data, index){
                  $(row).on('click', function(){
                    var url = "/commits/" + data.id;
                    window.location.assign(url);
                  })
                },
                initComplete: function () {
                  $('#loading').remove();
                  buildTopNav();
                },
                columns: [
                  { title: 'Commit Hash', data: 'commit_hash', defaultContent: 'Null',
                    render: function(data) {
                      return data.substring(0, 10);
                    }
                  },
                  { title: 'Date Created', data: 'date_created', defaultContent: 'Null',
                    render: function(data, type) {
                      // Allows the date to be prettily displayed, but it'll be
                      // sorted by the original, non-formatted date
                      if (type === 'display' || type === 'filter') {
                        return moment(data).format('MMMM Do YYYY, h:mm a');
                      }
                      return data;
                    }
                  },
                  { title: 'Abbreviated Commit Message', data: 'message', defaultContent: 'Null',
                    render: function(data) {
                      return data.split('\n')[0];
                    }
                  }
                ]
            });
        }
    });

    $('#datatable').on('mouseover', 'tbody tr', function() {
        $(this).css({
           'cursor': 'pointer',
            'color': 'blue'
        });
    });

    $('#datatable').on('mouseout', 'tbody tr', function() {
        $(this).css({
            'cursor': 'default',
            'color': 'inherit'
        });
    });

    // If mouse movement is detected, then the user is hopefully not a bot
    var input_detected = false;
    $(document).mousemove(function(event) {
        input_detected = true;
        $(document).off("mousemove");
    });

    // If keyboard input is detected, then the user is hopefully not a bot
    $(document).keypress(function(event) {
        input_detected = true;
        $(document).off("keypress");
    });

    $('#email_fetch').on('click', function() {
        if (!input_detected) {
          alert("We haven't detected any keyboard or mouse input from you. "
                + "To display the email address, please first show us you're not a bot.");
          return;
        }

        $.ajax({
            url: "/api/developers/" + $('#developer_id').text(),
            dataType: 'json',
            success: function(jsonData) {
              $('#email_fetch').hide();
              $('#developer_email')
                .html(jsonData.email)
                .show();
              $('#github_search')
                .prop('href', "https://github.com/search?q=" + jsonData.email + "&type=Users")
                .html("<i class=\"vhp-icon-github\"></i> Search for " + jsonData.email + " on GitHub")
                .show();
            },
            error: function() {
              if ($('#email_fetch').html() == "Failed. Retry?") {
                $('#email_fetch').html("Retry again?");
              } else {
                $('#email_fetch').html("Failed. Retry?");
              }
            }
        });
    });
});
