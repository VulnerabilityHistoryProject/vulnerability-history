import * as d3 from 'd3'
import * as anychart from 'anychart'
import { event } from 'jquery';


/* Data from CSV
Vulnerabilities,CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer,100
Vulnerabilities,CWE-121: Stack-based Buffer Overflow,20
Vulnerabilities,CWE-200: Information Exposure,20
CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer,CVE-2004-0751,100
CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer,CVE-2004-0747,100
CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer,CVE-2008-6998,100
CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer,CVE-2010-0663,100
CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer,CVE-2010-3415,100
CWE-121: Stack-based Buffer Overflow,CVE-2008-6998,20
CWE-200: Information Exposure,CVE-2010-0663,20
CVE-2004-0751,Tag: Lesson,12.5
CVE-2004-0751,Tag: Lifetime(1-2 Years),12.5
CVE-2004-0751,Tag: VCC,12.5
CVE-2004-0751,Tag: Fix(Small),12.5
CVE-2004-0751,Tag: Language (C),12.5
CVE-2004-0751,Tag: Discovered Externally,12.5
CVE-2004-0751,Tag: HTTPD Subsystem(modules/ssl/ssl_engine_io.c),12.5
CVE-2004-0751,Tag: Project(HTTPD),12.5
CVE-2004-0747,Tag: Lesson,10
CVE-2004-0747,Tag: Lifetime(2-5 Years),10
CVE-2004-0747,Tag: Fix(Big),10
CVE-2004-0747,Tag: Discovered Externally,10
CVE-2004-0747,Tag: Discovered Manually,10
CVE-2004-0747,Tag: Util,10
CVE-2004-0747,Tag: VCC,10
CVE-2004-0747,Tag: Project(HTTPD),10
CVE-2004-0747,Tag: HTTPD Subsystem(server),10
CVE-2004-0747,Tag: Language (C),10
CVE-2008-6998,Tag: Lesson,14.28
CVE-2008-6998,Tag: Lifetime(30 - 90 Days),14.28
CVE-2008-6998,Tag: Fix(Small),14.28
CVE-2008-6998,Tag: VCC,14.28
CVE-2008-6998,Tag: Project(Chromium),14.28
CVE-2008-6998,Tag: Language (C++),14.28
CVE-2008-6998,Tag: Chromium subsystem(url_elider),14.28
CVE-2010-0663,Tag: Lesson,11.11
CVE-2010-0663,Tag: Lifetime(1-2 Years),11.11
CVE-2010-0663,Tag: Fix(Small),11.11
CVE-2010-0663,Tag: Discovered Externally,11.11
CVE-2010-0663,Tag: Discovered Manually,11.11
CVE-2010-0663,Tag: VCC,11.11
CVE-2010-0663,Tag: Project(Chromium),11.11
CVE-2010-0663,Tag: Chromium subsystem utilities,11.11
CVE-2010-0663,Tag: Language(C++),11.11
CVE-2010-3415,Tag: Lesson,10
CVE-2010-3415,Tag: Lifetime(90 - 180 Days),10
CVE-2010-3415,Tag: Fix(Small),10
CVE-2010-3415,Tag: Discovered Externally,10
CVE-2010-3415,Tag: Discovered Manually,10
CVE-2010-3415,Tag: VCC,10
CVE-2010-3415,Tag: Bounty Awarrded ,10
CVE-2010-3415,Tag: Project(Chromium),10
CVE-2010-3415,Tag: Chromium Subsystem(Geolocation),10
CVE-2010-3415,Tag: Language(C++),10

*/


export default function TagTrends() {

	this.works = function () {

		//reading in the data
		anychart.onDocumentReady(function () {
			anychart.data.loadCsvFile("https://raw.githubusercontent.com/VulnerabilityHistoryProject/vulnerability-history/sankey_diagram/app/assets/javascripts/insights/vhp.csv", function (data) {

				var sankey_chart = anychart.sankey();

				//putting the data into the chart
				sankey_chart.data(data);

				//setting the chart padding
				sankey_chart.padding(20, 40);

				//custom color palette
				sankey_chart.palette(
					[
						'#f44336',
						'#e91e63',
						'#9c27b0',
						'#673ab7',
						'#3f51b5',
						'#2196f3',
						'#03a9f4',
						'#00bcd4',
						'#009688',
						'#4caf50',
						'#8bc34a',
						'#cddc39',
						'#ffeb3b',
						'#ffc107',
						'#ff9800',
						'#ff5722',
						'#795548',
						'#9e9e9e',
						'#607d8b'
					]);

				//customizing the nodes

				//setting the width
				sankey_chart.nodeWidth("40%");

				//setting the padding
				sankey_chart.nodePadding(30);

				//customize the labels


				sankey_chart.node().labels().fontSize(14);
				sankey_chart.node().labels()
					.format("{%name} {%value}");

				//customize the links
				sankey_chart.flow({
					normal: {
						fill: function () {
							return this.sourceColor + " " + 0.8;
						}
					}
				});

				//adding title and customizing it
				sankey_chart
					.title()
					// .enabled(true)
					// .useHTML(true)
					.text('<span style= "color: #2b2b2b; font-size:20px;">Tag Trends Test - 1</span>');

				//setting container id
				sankey_chart.container("tag-trends2");

				//drawing the chart
				sankey_chart.draw();
			});
		});

	};

	this.init = function () {
		var margin = {top: 10, right: 10, bottom: 10, left: 10},
			width = 750 - margin.left - margin.right,
			height = 780 - margin.top - margin.bottom;
		//var tape = require.resolve("tape");
		var d3Sankey = require("d3-sankey");
		var d3 = require("d3");
		//var sankey_diagram = d3Sankey.sankey().nodeWidth(15).nodePadding(10).extent([[1, 1], [959, 494]]);
		

		var svg = d3.select("#tag-trends2").append("svg")
			.attr("width", width + margin.left + margin.right)
			.attr("height", height + margin.top + margin.bottom)
			.append("g")
			.attr("transform",
				"translate(" + margin.left + "," + margin.top + ")");
			
			//Color scale
		var color = d3.scaleOrdinal(d3.schemeCategory10);

		var sankey_diagram = d3Sankey.sankey()
			.nodeWidth(36)
			.nodePadding(260)
			.size([width, height]);
		var graph = sankey_diagram(require("./test.json"));

		sankey_diagram
			.nodes(graph.nodes)
			.links(graph.links);

		

		// add in the links
		var link = svg.append("g").selectAll(".link")
			.data(graph.links)
			.enter().append("path")
			.attr("class", "link")
			.attr("d", d3Sankey.sankeyLinkHorizontal())
			.style("stroke-width", function (d) { return Math.max(1, d.value); })
			.sort(function (a, b) { return (b.y1 - b.y0 ) - (a.y1 - a.y0); })
			.append("title")
			.text(function (d) { return d.source.name + " â†’ " + d.target.name + "\n" + "Total Vulnerabilities: " + d.value; });


		//add in the nodes
		var node = svg.append("g").selectAll(".node")

			.data(graph.nodes)
			.enter().append("g")
			.attr("class", "node")
			.attr("transform", function (d) {  return "translate(" + (d.x0) + "," + (d.y0) + ")"; })
			.call(d3.drag()
				.subject(function (d) { return d; })
				.on("start", function () { this.parentNode.appendChild(this); })
				.on("drag", dragmove));
		
		

		// add the rectangles for the nodes
		node.append("rect")
			.attr("height", function (d) { console.log(d); return (d.y1 - d.y0); })
			.attr("width", sankey_diagram.nodeWidth())
			.style("fill", function (d) { return d.color = color(d.name.replace(/ .*/, "")); })
			.style("stroke", function (d) { return d3.rgb(d.color).darker(2); })
			
			//hover text
			.append("title")
			.text(function (d) { return d.name + "\n" + "Total: " + d.value; });

		// add in the title for the nodes
		node.append("text")
			.attr("x", -6)
			.attr("y", function (d) { return Math.abs((d.y1 - d.y0) / 2); })
			.attr("dy", ".35em")
			.attr("text-anchor", "end")
			.attr("transform", null)
			.text(function (d) { return d.name; })
			.filter(function (d) { return (d.x0) < width / 2; })
			.attr("x", 6 + sankey_diagram.nodeWidth())
			.attr("text-anchor", "start");

		// the function for moving the nodes
		function dragmove(d) {
			d3.select(this)
				.attr("transform",
					"translate("
					+ d.x0 + ","
					+ (d.y0 = Math.max(0, Math.min(height - (d.y1 - d.y0), d3.event.y))
					) + ")");
			sankey.relayout();
			link.attr("d", d3Sankey.sankeyLinkHorizontal());
		}



		

			
		
		
		// tape.skip("Sankey (Test) returns expected results", function (test) {
		// 	var sankey = d3.sankey().nodeWidth(15).nodePadding(10).extent([[1, 1], [959, 494]]);
		// 	var testdata = sankey(require("./test.json"));
		// 	test.deepEqual(testdata.nodes.map(nodePosition));
		// 	test.deepEqual(testdata.links.map(linkPosition));
		
		// 	test.end();
		// });

		function nodePosition(node) {
			return {
				x: round(node.x0),
				dx: round(node.x1 - node.x0),
				y: round(node.y0),
				dy: round(node.y1 - node.y0)
			};
		}

		function linkPosition(link) {
			return{
				source: nodePosition(link.source),
				target: nodePosition(link.target),
				dy: round(link.width),
				sy: round(link.y0 - link.source.y0 - link.width / 2),
				ty: round(link.y1 - link.target.y0 - link.width / 2)
			};
		}

		function round(x) {
			return Math.round(x * 10) / 10;
		}

	};


}



export function onInsightsTagTrends() {
	//const sankeyChart = new TagTrends().works();
	const sankeyChart = new TagTrends().init();
	d3.select('#tag-trends').append("p").html("I'm in d3!")
}





