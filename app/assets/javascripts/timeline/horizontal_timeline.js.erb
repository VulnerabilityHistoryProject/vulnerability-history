/**
 * Created by ekbos on 10/6/2016.
 */

function generateSVG() {
  var margin = {top: 10, right: 20, bottom: 30, left: 60},
      width = 960 - margin.left - margin.right,
      height = 500 - margin.top - margin.bottom;


  var svg = d3.select('#horizontal-timeline').append("svg")
      .attr("width", "100%")
      .attr("viewBox", "0 0 960 500")
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");


  d3.csv('<%= ENV['RAILS_RELATIVE_URL_ROOT'] %>/vulnerability-test-data.csv', function (error, bins) {
    if (error) throw error;

    var minDate = getDate(bins[0].jsonDate),
        maxDate = getDate(bins[bins.length - 1].jsonDate);


    var x = d3.scaleTime().range([0, width]);
    var y = d3.scaleLinear().range([height, 0]);
    // Set the scale domains.
    x.domain([minDate, maxDate]);
    y.domain([0, 30]);

    var slots = 25; // number of different
    var datePadLocations = getGroups(bins, slots);
    var occupiedXYValues = {};
    // Add the bins.

    svg.selectAll(".bin")
        .data(bins)
        .enter().append("svg:rect")
        .attr("class", "bin")
        .attr("x", function (d) {
          return x(getClosestDate(datePadLocations, getDate(d.jsonDate)));
        })
        .attr("y", function (d) {
          return y(getY(getClosestDate(datePadLocations, getDate(d.jsonDate)), occupiedXYValues));
        })
        .attr("width", 20)
        .attr("height", 15)
        .attr("rx", 3)
        .attr("ry", 3)
        .attr("fill", function (d) {
          return getColor(d.vType)
        })
        .on('click', function (d) {
          window.location.href = '#' + d.name;
          d3.select(this).attr("stroke", "#00FF00")
        })
        .on("mouseover", function () {
          d3.select(this).attr("stroke", "#00FF00")
        })
        .on("mouseout", function () {
          d3.select(this).attr("stroke", "")
        });

    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .style("fill", "white")
        .call(d3.axisBottom(x));
  });

}