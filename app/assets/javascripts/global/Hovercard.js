import $ from "jquery";

/**
 * Set a hovercard to load and present the selected vulnerability.
 * @param {*} elementSelect The class name of the elements that will have a hovercard.
 */
export default function setHovercard(elementSelect) {
  // Force cve links to stay on same line
  $(elementSelect).css("white-space", "nowrap");
  // Add hovercard div to elements with the given selector
  $(elementSelect).append('<div class="hover-card" id="unpopulated"></div>');

  // Initiate the hovercard element style and hide it
  $(".hover-card")
    .css({
      "white-space": "normal", // hovercard contents wrap
      display: "inline-flex",
      position: "absolute",
      backgroundColor: "#23232c",
      borderRadius: "17pt",
      borderLeft: "4pt solid #98e3b7",
      padding: "0.8em",
      height: "fit-content",
      width: "fit-content",
      color: "#98e3b7",
      fontSize: "14pt",
    })
    .hide();

  // Show the hovercard when hovering over the given elements and hide it when
  // hovering off it and the hovercard
  $(elementSelect).hover(
    function (e) {
      // when hovering over a link
      $(this)
        .find(".hover-card")
        .css({
          // spawn the hovercard centered at the cursor right below the chosen element
          left: e.pageX - 122, // center with the cursor,
          top: $(this)[0].getBoundingClientRect().bottom + window.scrollY - 3, // right below the element
        })
        .delay(450) // wait 450ms before displaying card
        .fadeIn(100); // make card visible;
      if ($(this).find(".hover-card").attr("id") === "unpopulated") {
        // if the card is not already populated make ajax request and change to populated
        ajaxReq($(this));
        $(this).find(".hover-card").attr("id", "populated");
      }
    },
    function () {
      // when hovering off the link
      $(this)
        .find(".hover-card")
        .stop(true) // if hover off before delay timer don't display card at all
        .fadeOut(100); // fade card away
    },
  );
}

// Populate hover card from given result json
function populateHovercard(result, element, cve) {
  const monthNames = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec",
  ];
  const title = $("<div></div>").text(cve).css({
    display: "flex",
    flexDirection: "column",
    fontWeight: "bold",
    textAlign: "left",
  });
  const title_description_div = $("<div></div>").css({
    display: "flex",
    flexDirection: "column",
    alignItems: "flex-start",
    gap: "1em",
  });
  const nickname = $("<span></span>").text(result["nickname"]).css({
    fontSize: "0.8em",
    fontWeight: "100",
    fontStyle: "italic",
  });
  // TODO Add the date of last event
  let date = new Date(result["announced"].substring(0, 10));
  const announced =
    monthNames[date.getMonth()] +
    " " +
    date.getDate() +
    ", " +
    date.getFullYear();
  const announced_date = $("<span></span>").text(announced).css({
    fontSize: "0.6em",
    fontWeight: "650",
    color: "#ea5f49",
  });
  // TODO Fetch and insert tag elements
  const tags = $("<div></div>").text("I C O N S T A B").css({
    display: "inline",
    width: "2em",
    lineHeight: "1.3em",
    marginRight: "1em",
  });
  const description = $("<p></p>").text(result["description"]).css({
    fontSize: "0.8em",
    textAlign: "left",
    color: "white",
    lineHeight: "1.6em",
    maxWidth: "30ch",
  });
  title.append(nickname, announced_date);
  title_description_div.append(title, description);
  $(element).find(".hover-card").append(tags, title_description_div);
}

// fetch request for vulnerability data
function ajaxReq(element) {
  const regexp = /(CVE-\d{4}-\d{4,})/gi;
  const cve = element.text().match(regexp)[0];
  $.ajax({
    url: "https://vulnerabilityhistory.org/api/vulnerabilities/" + cve,
    dataType: "json",
    success: (response) => {
      populateHovercard(response, element, cve);
    },
  });
}
