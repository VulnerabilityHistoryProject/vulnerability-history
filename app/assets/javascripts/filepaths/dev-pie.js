$( document ).ready( function() {
  $.ajax({
    url: "/api/filepaths/" +
          window.location.pathname.split("/").pop() +
          "/contributors",
    dataType: 'json',
    success: function(data) {
      var width = 960,
          height = 700,
          radius = 0.95 * Math.min(width, height) / 2; // 95% for scale transform
    var svg = d3.select("#dev-pie-chart")
                  .append("svg:svg")
                    .attr("width", width)
                    .attr("height", height)
                  .append("g")
                     .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");
      spectrum = d3.interpolateRgbBasis(['#C2D7B6','#3A6024','#C2D7B6'])
      var color = d3.scaleSequential(spectrum).domain([0,data.length])

      const pie = d3.pie()
                    .value(d => d.num_commits)
                    .sort(null);

      const arc = d3.arc()
                    .innerRadius(radius / 2)
                    .outerRadius(radius);

      var path = svg.selectAll('path')
                    .data(pie(data));
      path.enter()
          .append('a')
            .attr('href', d => '/developers/' + d.data.id)
            .attr('class', 'dev-pie-link')
          .append('path')
            .attr('d', arc)
            .attr('fill', (d, i) => color(i))
            .attr('stroke', '#fff')
            .attr('stroke-width', '5px')
          ;
      // svg.append('circle')
      //    .attr('fill', '#fff')
      //    .attr("cx", 0)
      //    .attr("cy", 0)
      //    .attr("r", radius / 2.25);
      svg.append('text')
         .attr('x', -radius / 3.25)
         .attr('y', -radius / 3.25)
         .attr('width', radius / 3.25)
         .attr('height', radius / 3.25)
         .text('foo')
         ;
      d3.selectAll("#dev-pie-toggle input")
        .on("change", toggle);

      function toggle() {
        var value = this.value;
        console.log(value);
        pie.value(function(d) {
          console.log(d[value])
          return d.total_churn;
        }); // change the value function
        path = path.data(pie); // compute the new angles
        // path.transition().duration(750).attrTween("d", arcTween); // redraw the arcs
      }

      // Store the displayed angles in _current.
      // Then, interpolate from _current to the new angles.
      // During the transition, _current is updated in-place by d3.interpolate.
      // function arcTween(a) {
      //   var i = d3.interpolate(this._current, a);
      //   this._current = i(0);
      //   return function(t) {
      //     return arc(i(t));
      //   };
      // }

      }
  });
});
