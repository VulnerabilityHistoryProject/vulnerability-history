(function(d3) {
        'use strict';
        var data;
        var dataset = [];
        $.ajax({
        url: "/api/filepaths/" + $('#filepath_id').text() + "/developers",
        dataType: 'json',
        success: function(jsonData) {
          var hash = {};
          var hashId = {};
          for(var i = 0; i < jsonData.length; i++){
            if (jsonData[i]["email"] !=  undefined){
              hash[jsonData[i]["email"]] = jsonData[i]["email"];
            }
            else{
              hash[jsonData[i]["email"]] = 1;
              hashId[jsonData[i]["email"]] = jsonData[i]["id"];
            }
            authorEmails[jsonData[i]['id']] = hash[jsonData[i]['email']];
          }
          for(var i in hash){
            dataset.push({ label: i, count: hash[i], id: 1});
          }
        var width = 275;
        var height = 275;
        var radius = Math.min(width, height) / 2;
        var color = d3.scaleOrdinal(d3.schemeCategory20c);
        var legendRectSize = 18;                                  
        var legendSpacing = 4;                                    

        var svg = d3.select('#chart')
          .append('svg')
          .attr('width', width)
          .attr('height', height)
          .append('g')
          .attr('transform', 'translate(' + (width / 2) +
            ',' + (height / 2) + ')');
        var arc = d3.arc()
          .innerRadius(0)
          .outerRadius(radius);
        var pie = d3.pie()
          .value(function(d) { return d.count; })
          .sort(null);
        var tooltip = d3.select('#chart')                               
          .append('div')                                                
          .attr('class', 'tooltipFile');                                    
        tooltip.append('div')                                           
          .attr('class', 'label');                                      
        tooltip.append('div')                                           
          .attr('class', 'count');                                      
        tooltip.append('div')                                           
          .attr('class', 'percent');                                    

        var path = svg.selectAll('path')
          .data(pie(dataset))
          .enter()
          .append('path')
          .attr('d', arc)
          .attr('fill', function(d) {
            return color(d.data.label);
          })
          .on("click", function(d) {
          var url = "/developers/" + hashId[d.data.label];
          $(location).attr('href', url);
          window.location = url;
          });
          path.on('mouseover', function(d) {                            
            var total = d3.sum(dataset.map(function(d) {                
              return d.count;                                           
            }));                                                        
            var percent = Math.round(1000 * d.data.count / total) / 10; 
            tooltip.select('.label').html(d.data.label);                
            tooltip.select('.count').html('Commits: ' + d.data.count);                
            tooltip.select('.percent').html(percent + '%');             
            tooltip.style('display', 'block');                          
          });                                                           
          path.on('mouseout', function() {                              
            tooltip.style('display', 'none');                           
          });                                                           
                                    
        }
      });      
      })(window.d3);
