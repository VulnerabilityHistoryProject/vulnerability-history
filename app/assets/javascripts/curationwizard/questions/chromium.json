[
  {
  "id": "cwe-id",
  "name": "CWE",
  "label": "Select a CWE that best describes your vulnerability.",
  "instructions": "Please go to <a href='https://cwe.mitre.org' target='_blank'>cwe.mitre.org</a> and find the most specific, appropriate CWE entry that describes your vulnerability. (Tip: this may not be a good one to start with - spend time understanding this vulnerability before making your choice!)",
  "defaultValue": "",
  "type": "cwe-selector",
  "tooltipText": "tooltip!"
}, {
  "id": "announced",
  "name": "announced",
  "label": "Announced Date",
  "instructions": "Was there a date that this vulnerability was announced to the world? You can find this in changelogs, blogs, bug reports, or perhaps the CVE date. A good source for this is Chrome's Stable Release Channel (https://chromereleases.googleblog.com/).",
  "defaultValue": "",
  "type": "date",
  "tooltipText": "",
  "previousQuestion" : "CWE"
}, {
  "id": "description",
  "name": "Description",
  "label": "Description",
  "instructions": "You can get an initial description from the CVE entry on cve.mitre.org. These descriptions are a fine start, but they can be kind of jargony. Rewrite this description in your own words. Make it interesting and easy to read to anyone with some programming experience. We can always pull up the NVD description later to get more technical. Try to still be specific in your description, but remove Chromium-specific stuff. Remove references to versions, specific filenames, and other jargon that outsiders to Chromium would not understand. Technology like 'regular expressions' is fine, and security phrases like 'invalid write' are fine to keep too.",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "",
  "previousQuestion" : "announced"
}, {
  "id": "bounty",
  "name": "bounty",
  "label": "Bounty",
  "instructions": "If you came across any indications that a bounty was paid out for this vulnerability, fill it out here. Or correct it if the information already here was wrong. Otherwise, leave it blank.",
  "defaultValue": "",
  "type": "string",
  "tooltipText": "",
  "previousQuestion" : "description"
}, {
  "id": "bounty_date",
  "name": "bounty_date",
  "label": "Bounty Date",
  "defaultValue": "",
  "type": "date",
  "tooltipText": "",
  "parentField" : "bounty"
}, {
  "id": "bounty_amount",
  "name": "bounty_amount",
  "label": "Bounty Amount",
  "defaultValue": "",
  "type": "number",
  "tooltipText": "",
  "parentField" : "bounty"
}, {
  "id": "bounty_references",
  "name": "bounty_references",
  "label": "Bounty References",
  "defaultValue": "",
  "type": "repeater|input",
  "tooltipText": "",
  "parentField" : "bounty"
}, {
  "id": "reviews",
  "name": "reviews",
  "label": "Reviews",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "",
  "previousQuestion" : "bounty"
}, {
  "id": "bugs",
  "name": "bugs",
  "label": "Bugs",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "",
  "previousQuestion" : "reviews"
}, {
  "id": "fixes",
  "name": "fixes",
  "label": "Fixes",
  "instructions": "Please put the commit hash in 'commit.'",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "See my example in CVE-2011-3092.yml",
  "previousQuestion" : "bugs"
}, {
  "id": "vccs",
  "name": "vccs",
  "label": "VCCs",
  "instructions": "Please put the commit hash in 'commit.'",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "See my example in CVE-2011-3092.yml",
  "previousQuestion" : "fixes"
}, {
  "id": "upvotes",
  "name": "upvotes",
  "label": "Upvotes",
  "instructions": "For the first round, ignore this upvotes number. For the second round of reviewing, you will be giving a certain amount of upvotes to each vulnerability you see. Your peers will tell you how interesting they think this vulnerability is, and you'll add that to the upvotes score on your branch..",
  "defaultValue": "",
  "type": "number",
  "tooltipText": "",
  "previousQuestion" : "vccs"
}, {
  "id": "unit_tested",
  "name": "unit_tested",
  "label": "Unit Tested",
  "instructions": "Were automated unit tests involved in this vulnerability? Was the original code unit tested, or not unit tested? Did the fix involve improving the automated tests? For the 'code' answer below, look not only at the fix but the surrounding code near the fix and determine if and was there were unit tests involved for this module. For the 'fix' answer below, check if the fix for the vulnerability involves adding or improving an automated test to ensure this doesn't happen again.",
  "defaultValue": "",
  "type": "string",
  "tooltipText": "",
  "previousQuestion" : "upvotes"
}, {
  "id": "unit_tested_answer",
  "name": "unit_tested_answer",
  "label": "Answer",
  "instructions": ".",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "",
  "parentField" : "unit_tested"
}, {
  "id": "unit_tested_code",
  "name": "unit_tested_code",
  "label": "Code",
  "instructions": "",
  "defaultValue": "",
  "type": "checkbox",
  "Options": [
    {
      "Value" : "true",
      "Label" : "Code"
    }
  ],
  "parentField": "unit_tested",
  "tooltipText": ""
}, {
  "id": "unit_tested_fixed",
  "name": "unit_tested_fixed",
  "label": "Fixed",
  "instructions": "",
  "defaultValue": "",
  "type": "checkbox",
  "Options": [
    {
      "Value" : "true",
      "Label" : "Fixed"
    }
  ],
  "parentField": "unit_tested",
  "tooltipText": ""
}, {
  "id": "discovered",
  "name": "discovered",
  "label": "Discovered",
  "instructions": "How was this vulnerability discovered?  Go to the bug report and read the conversation to find out how this was originally found. Answer in longform below in 'answer', fill in the date in YYYY-MM-DD, and then determine if the vulnerability was found by a Google employee (you can tell from their email address). If it's clear that the vulenrability was discovered by a contest, fill in the name there. The 'automated' flag can be true, false, or nil. The 'google' flag can be true, false, or nil. If there is no evidence as to how this vulnerability was found, then you may leave the entries blank except for 'answer'. Write down where you looked in 'answer'..",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "",
  "previousQuestion" : "unit_tested"
}, {
  "id": "discovered_date",
  "name": "discovered_date",
  "label": "",
  "instructions": "",
  "defaultValue": "",
  "type": "date",
  "parentField": "discovered",
  "tooltipText": ""
}, {
  "id": "discovered_automated",
  "name": "discovered_automated",
  "label": "",
  "instructions": "",
  "defaultValue": "",
  "type": "checkbox",
  "Options": [
    {
      "Value" : "true",
      "Label" : "Automated"
    }
  ],
  "parentField": "discovered",
  "tooltipText": ""
}, {
  "id": "discovered_google",
  "name": "discovered_google",
  "label": "",
  "instructions": "",
  "defaultValue": "",
  "type": "checkbox",
  "Options": [
    {
      "Value" : "true",
      "Label" : "Google"
    }
  ],
  "parentField": "discovered",
  "tooltipText": ""
}, {
  "id": "discovered_contest",
  "name": "discovered_contest",
  "label": "",
  "instructions": "",
  "defaultValue": "",
  "type": "checkbox",
  "Options": [
    {
      "Value" : "true",
      "Label" : "Contest"
    }
  ],
  "parentField": "discovered",
  "tooltipText": ""
}, {
  "id": "subsystem",
  "name": "subsystem",
  "label": "Subsystem",
  "instructions": "What subsystems was the mistake in?  Look at the path of the source code files code that were fixed to get directory names. Look at comments in the code. Look at the bug reports how the bug report was tagged. Examples: 'clipboard', 'gpu', 'ssl', 'speech', 'renderer'",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "",
  "previousQuestion" : "discovered"
}, {
  "id": "subsystem_name",
  "name": "subsystem_name",
  "label": "Name",
  "instructions": "",
  "defaultValue": "",
  "type": "input",
  "parentField": "subsystem",
  "tooltipText": ""
}, {
  "id": "interesting_commits",
  "name": "interesting_commits",
  "label": "Interesting Commits",
  "instructions": "Are there any interesting commits between your VCC(s) and fix(es)? Write a brief (under 100 words) description of why you think this commit was interesting in light of the lessons learned from this vulnerability. Any emerging themes? If there are no interesting commits, demonstrate that you completed this section by explaining what happened between the VCCs and the fix.",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "",
  "previousQuestion" : "subsystem"
}, {
  "id": "interesting_commits_commit",
  "name": "interesting_commits_commit",
  "label": "Commit",
  "instructions": "",
  "defaultValue": "",
  "type": "repeater|input",
  "parentField": "interesting_commits",
  "tooltipText": ""
}, {
  "id": "interesting_commits_note",
  "name": "interesting_commits_note",
  "label": "Commit Note",
  "instructions": "",
  "defaultValue": "",
  "type": "repeater|textarea",
  "parentField": "interesting_commits",
  "tooltipText": ""
}, {
  "id": "major_events",
  "name": "major_events",
  "label": "Major Events",
  "instructions": "Please record any major events you found in the history of this vulnerability. Was the code rewritten at some point? Was a nearby subsystem changed? Did the team change? The event doesn't need to be directly related to this vulnerability, rather, we want to capture what the development team was dealing with at the time.",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "",
  "previousQuestion" : "interesting_commits"
}, {
  "id": "major_events_name",
  "name": "major_events_name",
  "label": "Name",
  "instructions": "",
  "defaultValue": "",
  "type": "repeater|input",
  "parentField": "major_events",
  "tooltipText": ""
}, {
  "id": "major_events_date",
  "name": "major_events_date",
  "label": "Date",
  "instructions": "",
  "defaultValue": "",
  "type": "repeater|date",
  "parentField": "major_events",
  "tooltipText": ""
}, {
  "id": "lessons",
  "name": "lessons",
  "label": "Lessons",
  "instructions": "Are there any common lessons we have learned from class that apply to this vulnerability? In other words, could this vulnerability serve as an example of one of those lessons? Leave 'applies' blank or put false if you did not see that lesson (you do not need to put a reason). Put 'true' if you feel the lesson applies and put a quick explanation of how it applies. Don't feel the need to claim that ALL of these apply, but it's pretty likely that one or two of them apply. If you think of another lesson we covered in class that applies here, feel free to give it a small name and add one in the same format as these.",
  "defaultValue": "",
  "type": "string",
  "tooltipText": "",
  "previousQuestion" : "major_events"
}, {
  "id": "lessons_defense_in_depth",
  "name": "lessons_defense_in_depth",
  "label": "Defense in Depth Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_least_privilege",
  "name": "lessons_least_privilege",
  "label": "Least Privilege Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_framewords_are_optional",
  "name": "lessons_framewords_are_optional",
  "label": "Frameworks are Optional Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_native_wrappers",
  "name": "lessons_native_wrappers",
  "label": "Native Wrappers Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_distrust_input",
  "name": "lessons_distrust_input",
  "label": "Distrust Input Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_security_by_obscurity",
  "name": "lessons_security_by_obscurity",
  "label": "Security By Obscurity Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_serial_killer",
  "name": "lessons_serial_killer",
  "label": "Serial Killer Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_environment_variables",
  "name": "lessons_environment_variables",
  "label": "Environment Variables Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_secure_by_default",
  "name": "lessons_secure_by_default",
  "label": "Secure by Default Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_yagni",
  "name": "lessons_yagni",
  "label": "Yagni Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "lessons_complex_inputs",
  "name": "lessons_complex_inputs",
  "label": "Complex Inputs Applies",
  "instructions": "",
  "defaultValue": "",
  "type": "textarea",
  "parentField": "lessons",
  "tooltipText": ""
}, {
  "id": "mistakes",
  "name": "mistakes",
  "label": "Mistakes",
  "instructions": "In your opinion, after all of this research, what mistakes were made that led to this vulnerability? Coding mistakes? Design mistakes? Maintainability? Requirements?Miscommunications? Look at the CWE entry for this vulnerability and examine the mitigations they have written there. Are they doing those? Does the fix look proper? Use those questions to inspire your answer. Don't feel obligated to answer every one. Write a thoughtful entry here that those ing the software engineering industry would find interesting.",
  "defaultValue": "",
  "type": "textarea",
  "tooltipText": "",
  "previousQuestion" : "lessons",
  "isLast": true
}
]