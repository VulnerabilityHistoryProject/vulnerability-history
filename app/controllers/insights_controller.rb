class InsightsController < ApplicationController

  # GET /insights
  # GET /insights/tag-trends
  def tag_trends
    #Not sure this is needed.
  end

	# GET /api/insights/tag-trends
	def tag_trends_api
    #Gets the list of tags from the database based on family

    params.permit(:family1, :family2, :family3, :family4)
    permitted_params = ["bounty", "lifetime", "project", "language", "deps", "error of omission", "i18n", "environment_variables", 
      "least_privilege", "origin", "specification", "complex_inputs", "frameworks_are_optional", "secure_by_default", "security_by_obscurity",
    "vouch", "serial_killer", "discovered_method", "native_wrappers", "sandbox", "yagni", "fix"] 

    families = [params[:family1], params[:family2], params[:family3], params[:family4]]
    permitted_families = families.select { |family| permitted_params.include?(family) }

    if permitted_families.length == 4

      results = Insights.dataForSankey(permitted_families)

      dataForSankey = {}
      #total nodes
      nodes = []
  
      #add all of the first column for sankey diagram
      results.each do |result|
        node1 = {name: result['tag1']}
        unless nodes.include?(node1)
          nodes << node1
        end
      end
  
      #add all of the second column for sankey diagram
      results.each do |result|
        node2 = {name: result['tag2']}
        unless nodes.include?(node2)
          nodes << node2
        end
      end
  
      dataForSankey[:nodes] = nodes
      
      links = []
  
      results.each do |result|
        link = {source: result['tag1'], target: result['tag2'], value: result['num_vals']}
        unless links.include?(link)
          links << link
        end
      end
  
      dataForSankey[:links] = links
      
      render_json_for_api dataForSankey

    else
      render json: { error: "Invalid family"}, status: :bad_request
    end

  end
end