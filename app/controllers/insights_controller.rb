class InsightsController < ApplicationController

  # GET /insights
  # GET /insights/tag-trends
  def tag_trends
    #Not sure this is needed.
  end

	# GET /api/insights/tag-trends
	def tag_trends_api
    #Gets the list of tags from the database based on family

    params.permit(:family)
    permitted_params = ["bounty", "lifetime", "project", "language", "deps", "error of omission", "i18n", "environment_variables", 
      "least_privilege", "origin", "specification", "complex_inputs", "frameworks_are_optional", "secure_by_default", "security_by_obscurity",
    "vouch", "serial_killer", "discovered_method", "native_wrappers", "sandbox", "yagni", "fix"] 
    paramsFamily = params[:family]
    families = []
    if permitted_params.include?(paramsFamily[0]) && permitted_params.include?(paramsFamily[1]) && permitted_params.include?(paramsFamily[2]) && permitted_params.include?(paramsFamily[3])
      families << paramsFamily[0]
      families << paramsFamily[1]
      families << paramsFamily[2]
      families << paramsFamily[3]
    end

    if !families.empty? 

      results = Insights.tag_trend_data(families)
      dataForSankey = {}
      #total nodes
      nodes = []
  
      #add all of the first column for sankey diagram
      results.each do |result|
        node1 = {name: result['tag1']}
        unless nodes.include?(node1)
          nodes << node1
        end
      end
  
      #add all of the second column for sankey diagram
      results.each do |result|
        node2 = {name: result['tag2']}
        unless nodes.include?(node2)
          nodes << node2
        end
      end
  
      dataForSankey[:nodes] = nodes
      
      links = []
  
      results.each do |result|
        link = {source: result['tag1'], target: result['tag2'], value: result['num_vals']}
        unless links.include?(link)
          links << link
        end
      end
  
      dataForSankey[:links] = links
      
      render_json_for_api dataForSankey
    else
      render json: "Error: Invalid number of families or invalid families", status: :bad_request
    end
  end

end