class VulnerabilitiesController < ApplicationController
  before_action :set_vulnerability, only: [:show, :events]

  # GET /vulnerabilities
  # GET /api/vulnerabilities
  def index
    @announcements = []

    @vulnerabilities = Vulnerability.list_all(params[:short_descriptions])
    @articleVulns = ArticleVulnerability.joins(:article).distinct(:article_id).select(:title, :blurb, :art)
    render_json_for_api @vulnerabilities
  end

  # GET /vulnerabilities/1
  # GET /api/vulnerabilities/1
  def show
    @vulnerable_files = Filepath.vulnerable(@vulnerability)
    render_json_for_api @vulnerability
  end

  # GET /api/vulnerabilities/1/events
  # This is an API-only route
  def events
    events = @vulnerability.events.map do |e|
      {
        id: e.id,
        title: e.title,
        description: e.description,
        date: e.date,
        event_type: e.event_type,
        color: e.color,
        icon: e.icon,
        notes: e.notes,
        start_hidden: e.start_hidden,
      }
    end
    render_json_for_api events
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_vulnerability
      id = params[:id] || params[:vulnerability_id]
      if Vulnerability.exists? id
        @vulnerability = Vulnerability.find id
      else
        flash[:error] = "Error: Vulnerability not found"
        redirect_to controller: 'vulnerabilities'
      end
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def vulnerability_params
      params.fetch(:vulnerability)
            .permit(:short_descriptions)
    end

end
