class VulnerabilitiesController < ApplicationController
  before_action :set_vulnerability, only: [:show]

  # GET /vulnerabilities
  # GET /api/vulnerabilities
  api :GET, '/vulnerabilities'
  def index
    @announcements = []
    # FIXME: SUPER SLOW! Gr.
    # @announcements = Event.where(detail_type: 'Vulnerability')
    #                       .includes(:detail, :style)
    @vulnerabilities = Vulnerability.list_all(params[:short_descriptions])
    render_json_for_api @vulnerabilities
  end

  # GET /vulnerabilities/1
  # GET /api/vulnerabilities/1
  api!
  def show
    @vulnerable_files = Filepath.vulnerable(@vulnerability)
    @events = @vulnerability.events.includes(:detail, :style)
    render_json_for_api @vulnerability
  end

  # GET /api/vulnerabilities/1/events
  # This is an API-only route
  def events
    render_json_for_api Vulnerability.events.map do |e|
      {
        title: e.title,
        description: e.description,
        date: e.date,
        type: e.type,
      }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_vulnerability
      if Vulnerability.exists?(params[:id])
        @vulnerability = Vulnerability.find(params[:id])
      else
        flash[:error] = "Error: Vulnerability not found"
        redirect_to controller: 'vulnerabilities'
      end
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def vulnerability_params
      params.fetch(:vulnerability).permit(:short_descriptions)
    end
end
