class FilepathsController < ApplicationController
  before_action :set_filepath, only: [:show]

  # GET /filepaths
  # GET api/filepaths?offenders=true
  # GET api/filepaths
  def index

    @filepaths = if params[:offenders].to_s == 'true'
      Filepath.offenders
    else
      Filepath.all
    end
    render_json_for_api @filepaths
  end

  # GET /filepaths/1
  # GET api/filepaths/1
  def show
    if @filepath == nil
      flash[:error] = "Error: Filepath not found"
      redirect_to controller: 'filepaths', :action => 'index'
    else
      render_json_for_api @filepath
    end
  end

  #GET /api/filepaths/4/developers
  def developers
    render_json_for_api Filepath.find(params[:filepath_id]).developers
  end

  #GET /api/filepaths/4/contributors
  def contributors
    render_json_for_api Filepath.find(params[:filepath_id]).contributors
  end

  #GET /api/filepaths/4/commits
  def commits
    render_json_for_api Filepath.find(params[:filepath_id]).commits
  end

  #GET /api/filepaths/4/vulnerabilities
  def vulnerabilities
    render_json_for_api Filepath.find(params[:filepath_id]).vulnerabilities(params[:short_descriptions])
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_filepath
      if /\A\d+\z/.match(params[:path])
        if Filepath.exists?(params[:path])
          fp = Filepath.find(params[:path])
          redirect_to "/filepaths/" + fp.filepath
        else
          flash[:error] = "Error: Filepath not found"
          redirect_to controller: 'filepaths', :action => 'index'
        end
      else
        @filepath = Filepath.find_by(filepath: params[:path])
      end
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def filepath_params
      params.fetch(:filepath, {}).permit(:offenders)
    end
end
