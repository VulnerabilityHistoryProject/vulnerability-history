const path = require("path");
const webpack = require("webpack");

// Extracts CSS into .css file
// not using css in webpack - using rails asset pipeline instead
// const MiniCssExtractPlugin = require('mini-css-extract-plugin');

// Analyze the size of our bundle
const BundleAnalyzerPlugin =
  require("webpack-bundle-analyzer").BundleAnalyzerPlugin;

module.exports = {
  mode: "production",
  devtool: "source-map",
  entry: {
    vhp: path.resolve(__dirname, "../../app/assets/javascripts/vhp.js"),
  },
  module: {
    rules: [
      // not using css in webpack - using rails asset pipeline instead
      // { // Add CSS/SASS/SCSS rule with loaders
      //   test: /\.s[ac]ss$/i,
      //   use: [MiniCssExtractPlugin.loader, 'css-loader', 'sass-loader'],
      // },
      {
        test: /\.(png|jpe?g|gif|eot|woff2|woff|ttf|svg)$/i,
        use: "file-loader",
      },
    ],
  },
  resolve: {
    modules: ["node_modules"],
    extensions: [".js", ".jsx", ".scss", ".css"],
  },
  // doesn't seem to do much tree shaking? disabling because i don't trust it for now.
  // optimization: {
  //   splitChunks: {
  //     chunks: 'all',
  //   },
  // },
  output: {
    filename: "[name].js",
    sourceMapFilename: "[name].js.map",
    path: path.resolve(__dirname, "../../app/assets/builds"),
  },
  plugins: [
    new webpack.ProgressPlugin(), // show progress via --progress
    // new MiniCssExtractPlugin(), //not using css in webpack - using rails asset pipeline instead
    // new BundleAnalyzerPlugin() //uncomment to analyze bundle size
  ],
};
