openapi: 3.1.0
servers:
  - url: //api
info:
  title: Vulnerability History Project RESTful API
  description: |
    This read-only API allows detailed access to the VHP data.

    This documentation is a work-in-progress. If you want to contribute, see [our issue on GitHub](https://github.com/VulnerabilityHistoryProject/vulnerability-history/issues/956). For now, these are our main endpoints for you to explore:

      * /api/vulnerabilities/
      * /api/vulnerabilities/1/
      * /api/vulnerabilities/CVE-2017-5107
      * /api/vulnerabilities/CVE-2017-5107/tags
      * /api/vulnerabilities/CVE-2017-5107/events
      * /api/commits
      * /api/commits/1/developer
      * /api/developers
      * /api/filepaths
      * /api/filepaths/1
      * /api/tags/
      * /api/tags/1
      * /api/articles
      * /api/articles/1
      * /api/corpus
      * /api/insights/correlogram?x=language&y=project
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
paths:
  /api/vulnerabilities:
    get:
      operationId: listVulnerabilities
      summary: /api/vulnerabilities
      description: Returns a non-detailed list of all vulnerabilities
      parameters:
        - name: short_descriptions
          description: |
            Should the descriptions be truncated? Mainly used in the VHP UI
          in: query
          required: false
          schema:
            type: boolean
        - name: limit
          description: |
            Limit the number of results
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          description: |
            Return a subset of the results, offset by this number
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: VHP's primary key. Subject to change without notice.
                      type: integer
                      format: int32
                    cve:
                      description: Unique, public identifier string
                      type: string
                    announced:
                      description: Parseable date format
                      type: string
                    upvotes:
                      description: A community-generated measurement of how interesting this vulnerability is.
                      type: integer
                      format: int32
                    nickname:
                      description: |
                        A community-generated nickname, under 30 chars
                      type: string
                    project_name:
                      description: |
                        Title of the project this vulnerability is fromt
                      type: string
                    subdomain:
                      description: Shorthand name for hte project, e.g. "httpd" instead of "Apache HTTPD Web Server"
                      type: string
                    tag_json:
                      description: |
                        List of tags associated with this vulnerability
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            descriptioun: |
                              VHP's primary key for the tag. Subject to change without notice. A current list of tag mappings can be found at /api/tags endpoint.
                            type: integer
                            format: int32
                          importance:
                            description: |
                              A subjective number calculated to visually prioritize tags according how important we think they are to this vulnerability's story.
                            type: integer
                            format: int32
                    description:
                      type: string

              # examples:
              #   example1:
              #     summary: /api/vulnerabilities (no parameters)
              #     value:


        "400":
          description: Malformed request.
          content: {}
        "500":
          description: |
            Internal error. Please report these on our
            [issue tracker](https://github.com/VulnerabilityHistoryProject/vulnerability-history/issues).
          content: {}
  /api/insights/correlogram:
    get:
      operationId: correlogram
      summary: /api/insights/correlogram
      description: |
        Return an adjacency list of counts of how many vulnerabilities have two types of tags.

        For example, `x=language` and `y=project` would compare all of the language tags and project tags.

        Most tag types are supported, although some are just singletons.

        If a combination had zero vulnerabilities (e.g. HTTPD and Java), then it does not show up on this list.

        The tag shortnames returned can be used in the URL of the tags url.
      parameters:
        - name: x
          description: |
            The prefix of the tag names on the x-axis
          in: query
          required: true
          schema:
            type: string
            enum:
              - cwe
              - dependency
              - discovered
              - discussion
              - feature
              - fix
              - language
              - lesson
              - lifetime
              - location
              - mistake
              - project
              - severity
              - stacktrace
              - subsystem
              - vcc
        - name: y
          description: |
            The prefix of the tag names on the y-axis
          in: query
          required: true
          schema:
            type: string
            enum:
              - cwe
              - dependency
              - discovered
              - discussion
              - feature
              - fix
              - language
              - lesson
              - lifetime
              - location
              - mistake
              - project
              - severity
              - stacktrace
              - subsystem
              - vcc
