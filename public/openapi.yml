openapi: 3.1.0
servers:
  - url: "https://vulnerabilityhistory.org"
info:
  title: Vulnerability History Project RESTful API
  description: |
    This read-only API allows detailed access to the VHP data.

    This documentation is a work-in-progress. If you want to contribute, see [our issue on GitHub](https://github.com/VulnerabilityHistoryProject/vulnerability-history/issues/956).
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
security: []
paths:
  /api/vulnerabilities:
    get:
      summary: /api/vulnerabilities
      operationId: listVulnerabilities
      description: Returns a non-detailed list of all vulnerabilities
      parameters:
        - name: short_descriptions
          description: |
            Should the descriptions be truncated? Mainly used in the VHP UI
          in: query
          required: false
          schema:
            type: boolean
        - name: limit
          description: |
            Limit the number of results
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          description: |
            Return a subset of the results, offset by this number
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: VHP's primary key. Subject to change without notice.
                      type: integer
                      format: int32
                    cve:
                      description: Unique, public identifier string
                      type: string
                    announced:
                      description: Parseable date format
                      type: string
                    upvotes:
                      description: A community-generated measurement of how interesting this vulnerability is.
                      type: integer
                      format: int32
                    nickname:
                      description: |
                        A community-generated nickname, under 30 chars
                      type: string
                    project_name:
                      description: |
                        Title of the project this vulnerability is fromt
                      type: string
                    subdomain:
                      description: Shorthand name for the project, e.g. "httpd" instead of "Apache HTTPD Web Server"
                      type: string
                    tag_json:
                      description: |
                        List of tags associated with this vulnerability
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            description: |
                              VHP's primary key for the tag. Subject to change without notice. A current list of tag mappings can be found at /api/tags endpoint.
                            type: integer
                            format: int32
                          importance:
                            description: |
                              A subjective number calculated to visually prioritize tags according how important we think they are to this vulnerability's story.
                            type: number
                    description:
                      type: string
              example:
                - id: 1426
                  cve: CVE-2017-5060
                  announced: '2017-04-19T00:00:00.000Z'
                  upvotes: 50
                  nickname: Omni-Puny
                  project_name: Chromium
                  subdomain: chromium
                  tag_json:
                  - id: 27
                    importance: 1
                  - id: 273
                    importance: 0.45
                  - id: 257
                    importance: 0
                  - id: 748
                    importance: 0
                  - id: 750
                    importance: 0
                  - id: 2
                    importance: 0
                  description: |
                    URL spoofing in Omnibox. Certain Cyrillic characters look incredibly similar
                    to standard Roman Alphabet characters, so much so that certain fonts don't
                    distinguish between the two. Registering a domain with "punycode" escape
                    sequences causes these characters to display in the browser.
                - id: 1472
                  cve: CVE-2017-5107
                  announced: '2017-01-27T00:00:00.000Z'
                  upvotes: 50
                  nickname: Convoluted
                  project_name: Chromium
                  subdomain: chromium
                  tag_json:
                  - id: 62
                    importance: 1
                  - id: 274
                    importance: 0.45
                  - id: 257
                    importance: 0
                  - id: 3
                    importance: 0
                  - id: 2
                    importance: 0
                  - id: 750
                    importance: 0
                  description: |
                    User information leak via SVG. By rendering a FeConvolveMatrix SVG filter over
                    a target iframe and timing its execution an attacking page can extract pixel
                    values from a cross-origin page being iframe'd.

        "400":
            $ref: '#/components/responses/400Malformed'
        "500":
            $ref: '#/components/responses/500Internal'

  /api/vulnerabilities/{cve}:
    get:
      summary: /api/vulnerabilites/{cve}
      operationId: showVulnerability
      description: |
        Returns detailed information on a vulnerability with the specified ID
      parameters:
        - $ref: '#/components/parameters/CVEParam'

      responses:
        "200":
          description: OK
          content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      description: VHP's primary key. Subject to change without notice.
                      type: integer
                      format: int32
                    cve:
                      description: Unique, public identifier string
                      type: string
                    project_id:
                      # Not sure if this info is correct
                      description: Project ID that this vulnerability falls under
                      type: integer
                      format: int32
                    announced:
                      description: The date that this vulnerability was announced
                      type: string
                    description:
                      description: The handwritten description of the vulnerability
                      type: string
                    short_desc:
                      type: string
                    upvotes:
                      type: integer
                      format: int32
                    nickname:
                      type: string
                    notes:
                      type: string
                      description: Original copy of the YAML file
                example:
                  id: 2427
                  cve: CVE-2017-5638
                  project_id: 6
                  announced: '2017-03-02T00:00:00.000Z'
                  description: |
                    Apache Struts utilizes multipart parsers to handle HTTP POST requests,
                    and there are two types available, Jakarta and Pell. The Jakarta
                    Multiparser was the one that had the vulnerability, and it generates an
                    exception when parsing the Content-Type. It raises this exception and
                    includes the invalid data in the error message, and does this by
                    parsing the input and treating the parsed result as an OGNL expression.
                    This is potential for remote code execution.
                  short_desc: "Apache Struts utilizes multipart parsers to handle HTTP POST requests, and there are \ntwo types available, Jakarta and Pell"
                  upvotes: 0
                  nickname: The Equifax Breach
        "400":
            $ref: '#/components/responses/400Malformed'
        "500":
            $ref: '#/components/responses/500Internal'

  /api/vulnerabilities/{cve}/events:
     get:
      summary: /api/vulnerabilities/{cve}/events
      operationId: listVulnerabilityEvents
      description: Return all events for the specified vulnerability
      parameters:
        - $ref: '#/components/parameters/CVEParam'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int32
                    title:
                      type: string
                    description:
                      type: string
                    date:
                      type: string
                    event_type:
                      description: Internal code for grouping events
                      type: string
                    color:
                      type: string
                    icon:
                      description: VHP icon CSS class for what icon to use
                      type: string
                    start_hidden:
                      description: Whether or not to start hidden on the page
                      type: boolean
                    notes:
                      type: object
              example:
                - id: 2438
                  title: Vulnerability Announced for CVE-2017-5638
                  description: The vulnerability was officially announced by the development team.
                  date: '2017-03-02T00:00:00.000Z'
                  event_type: announced
                  color: "#9DD5D5"
                  icon: bug_report
                  notes: {}
                  start_hidden: false
                - id: 4378
                  title: 'Fix for CVE-2017-5638: Uses default error key if specified key doesn''t
                    exist'
                  description: |-
                    Our curators found that this vulnerability was fixed by this commit.

                    The commit had  lines changed.

                      * 9 insertions, and
                      * 12 deletions

                    Here was the commit message.
                    <blockquote>
                    Uses default error key if specified key doesn't exist
                    </blockquote>

                    [Learn more about this commit](/commits/6b8272ce47160036ed120a48345d9aa884477228)
                  date: '2017-03-06T10:17:38.000Z'
                  event_type: fix
                  color: "#9FE69F"
                  icon: lock
                  notes: {}
                  start_hidden: false
                - id: 6995
                  title: 'Vulnerability-contributing commit for CVE-2017-5638: WW-4636 - File upload
                    error message always in default language'
                  description: |-
                    A **vulnerability-contributing commit** (VCC) occurred here. This means that a curator identified this commit as (one of) the possible origins of this vulnerability.

                    This VCC had:

                      * 22 insertions, and
                      * 175 deletions

                    Thus it had a total raw churn of .

                    Here was the commit message.
                    <blockquote>
                    :description:
                    </blockquote>

                    [Learn more about this commit](/commits/33ac7ac49aabfcf792d38fa44d271a93433ffe56)

                    [Learn more about vulnerability-contributing commits.](/articles/vccs.md)
                  date: '2016-10-15T12:25:14.000Z'
                  event_type: vcc
                  color: "#ED6049"
                  icon: report_problem
                  notes: {}
                  start_hidden: false
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/commits:
    get:
      summary: /api/commits
      operationId: listCommits
      description: |
        Returns a non-detailed list of all commits in the database. These are VCCs, fixes, and interesting commits.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: |
                        The primary key of the commit. Currently null for unknown reasons
                      type: integer
                      format: int32
                    commit_hash:
                      description: The unique hash of the commit
                      type: string
                    email:
                      description: The email address of the developer responsible for the commit
                      type: string
                    date_created:
                      description: Parseable date format
                      type: string
              example:
                - commit_hash: 639e20992a66d7a42fb59c974db91c8a0f730a1e
                  email: foo@example.com
                  date_created: '2011-04-01T11:36:54.000Z'
                  id: 0
                - commit_hash: b7b5c63a932f6c1ea05f9b65ad9054247bb5af57
                  email: foo@example.com
                  date_created: '2011-04-01T10:49:43.000Z'
                  id: 1
                - commit_hash: eae54419c6e196933998f63358367040edaa4a8c
                  email: foo@example.com
                  date_created: '2006-07-20T12:50:34.000Z'
                  id: 2
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/commits/{sha}:
     get:
      summary: /api/commits/{sha}
      operationId: showCommit
      description: Author of the given commit
      parameters:
        - $ref: '#/components/parameters/GitSHAParam'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/commits/{sha}/developer:
     get:
      summary: /api/commits/{sha}/developer
      operationId: showCommitAuthor
      description: Author of the given commit
      parameters:
        - $ref: '#/components/parameters/GitSHAParam'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/developers:
    get:
      operationId: listDevelopers
      summary: /api/developers
      description: |
        Return a list of the developers who are authors of vulnerability-contributing commits, or fix commits.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                  email:
                    type: string
                  nickname:
                    type: string
                  notes:
                    type: string
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/developers/{developer_id}/commits:
     get:
      summary: /api/developers/{developer_id}/commits
      operationId: listDeveloperCommits
      description: |
        List the commits for a developer
      parameters:
        - $ref: '#/components/parameters/DeveloperIDParam'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
              example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/filepaths:
    get:
      summary: /api/filepaths
      operationId: listFilepaths
      description: List all files touched by any commit in the database
      parameters:
        - name: offenders
          description: |
            Only return "known offenders", which are files that are part of at least one vulnerability fix
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
              example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/filepaths/{filepath_id}/developers:
     get:
      summary: /api/filepaths/{filepath_id}/developers
      operationId: listFilepathDevelopers
      description: |
        Returns a list of authors to the commits of the file. Only includes authors of commits in VHP.
      parameters:
        - $ref: '#/components/parameters/FilepathParam'
      responses:
        "200":
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/filepaths/{filepath_id}/commits:
     get:
      summary: /api/filepaths/{filepath_id}/commits
      operationId: listFilepathCommits
      description: |
        Returns a list of key commits to the file. Only includes VCCs, fixes, and interesting commits.
      parameters:
        - $ref: '#/components/parameters/FilepathParam'
      responses:
        "200":
            description: OK
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/filepaths/{filepath_id}/vulnerabilities:
     get:
      summary: /api/filepaths/{filepath_id}/vulnerabilities
      operationId: listFilepathVulnerabilities
      description: |
        Returns a list of vulnerabilities fixed in this file.
      parameters:
        - $ref: '#/components/parameters/FilepathParam'
      responses:
        "200":
            description: OK
            content:
              application/json:
                schema:
                  type: array
                items:
                  type: object
                example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/tags:
    get:
      summary: /api/tags
      operationId: listTags
      description: List all tags in the database
      parameters:
        - name: map
          description: |
            Change the return format from array to dictionary
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
              example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/tags/{tag_id}:
    get:
      summary: /api/tags/{tag_id}
      operationId: showTag
      description: |
        Show details of a particular tag, including vulnerabilities that this
        tag has been applied to.
      parameters:
        - $ref: '#/components/parameters/TagIDParam'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
              example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/corpus:
    get:
      summary: /api/corpus
      operationId: corpus
      description: Returns a list of vulnerabilities filtered by having written langauge in the `description` and `mistakes` fields. Also includes tag data too. Use for research purposes.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
              example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

  /api/projects:
    get:
      summary: /api/projects
      operationId: listProjects
      description: |
        Returns the list of projects
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
              example:
        "400":
          $ref: '#/components/responses/400Malformed'
        "500":
          $ref: '#/components/responses/500Internal'

components:
  responses:
    400Malformed: # Can be referenced as '#/components/responses/400Malformed'
      description: Malformed request.
    500Internal: # Can be referenced as '#/components/responses/500Internal'
      description: |
        Internal error. Please report these on our
        [issue tracker](https://github.com/VulnerabilityHistoryProject/vulnerability-history/issues).
      content: {}

  parameters:
    CVEParam:
      name: cve
      in: path
      description: The unique CVE identifier of the vulnerability
      schema:
        type: string
        format: Common Vulnerabilities Enumeration
        pattern: ^CVE\-\d{4}\-\d+$
      example: CVE-2017-5638
    GitSHAParam:
      name: sha
      in: path
      description: The unique SHA hash string of a git commit
      schema:
        type: string
        format: Git SHA-256
        pattern: ^[\da-f]{40}$
        example: 011a54315e46acdf288003566b8570440f5ac985
    DeveloperIDParam:
      name: developer_id
      in: path
      description: |
        The internal primary key of the developer. Subject to change without
        notice.
      schema:
        type: integer
        format: int32
    FilepathParam:
      name: filepath_id
      in: path
      description: |
        The url-friendly identifier of a filepath.
      schema:
        type: string
    TagIDParam:
      name: tag_id
      in: path
      description: |
        The url-friendly slug of a tag
      schema:
        type: string

