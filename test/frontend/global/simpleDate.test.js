import SimpleDate from '../../../app/frontend/global/SimpleDate'

var exampleDate;
var smallDate;
var largeDate;

beforeEach(() => {
    exampleDate = new SimpleDate(new Date(2000, 0, 5, 11, 32, 44));
    smallDate = new SimpleDate(new Date(2011, 4, 8, 2, 0));
    largeDate = new SimpleDate(new Date(2011, 6, 9, 2, 0));
});

test("Display formats", () => {
    expect(exampleDate.shortFormat()).toBe("2000-01-05");
    expect(exampleDate.longFormat()).toBe("January 5th, 2000");
    expect(exampleDate.timestampFormat()).toBe("January 5th 2000, 11:32 am");
});

test("Accessors", () => {
    expect(exampleDate.getYear()).toBe(2000);
    expect(exampleDate.getMonth()).toBe(0);
    expect(exampleDate.getWeekOfYear()).toBe(2);
    expect(exampleDate.getDayOfMonth()).toBe(5);
    expect(exampleDate.getLastDayOfMonth()).toBe(31);
});

test("Date Comparison", () => {
    expect(smallDate.getSmallerDate(largeDate)).toBe(smallDate);
    expect(smallDate.getLargerDate(largeDate)).toBe(largeDate);
    expect(largeDate.getSmallerDate(smallDate)).toBe(smallDate);
    expect(largeDate.getLargerDate(smallDate)).toBe(largeDate);
    
    expect(largeDate.isDateSameOrAfter(smallDate)).toBe(true);
    expect(smallDate.isDateSameOrAfter(largeDate)).toBe(false);
})

test("SimpleDate Create Methods", () => {
    expect(exampleDate.createJSDate()).toStrictEqual(new Date(2000, 0, 5, 11, 32, 44));
    expect(exampleDate.createWeekDay(3)).toStrictEqual(exampleDate);
    expect(exampleDate.createWeekDay(2)).toStrictEqual(new SimpleDate(new Date(2000, 0, 4, 11, 32, 44)));
    var nextExamDate = exampleDate.createNextDay();
    expect(nextExamDate).toStrictEqual(new SimpleDate(new Date(2000, 0, 6, 11, 32, 44)));
    nextExamDate = nextExamDate.createNextDay();
    expect(nextExamDate).toStrictEqual(new SimpleDate(new Date(2000, 0, 7, 11, 32, 44)));
})
