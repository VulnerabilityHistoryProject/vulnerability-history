require 'test_helper'

class EventTest < ActiveSupport::TestCase

  test 'fixtures are loaded' do
    assert Event.any?
  end

  test 'event details can be pulled' do
    e = events(:fix1_event)
    assert_equal 'Fix: Strip CRs from *.in files to allow building from webkit.org',
                 e.detail.title
    assert e.description.starts_with? 'R=darin'
    assert_equal 'fix', e.type
    assert_equal commits(:fix1).date_created, e.date
  end

  test 'event details can pull from notes' do
    e = events(:cve_2011_3092_bounty)
    assert_equal 1000.0, e.title
    assert_equal vulnerabilities(:cve_2011_3092).description, e.description
    assert_equal vulnerabilities(:cve_2011_3092).notes['bounty_announced'], e.date
    assert_equal "vulnerability", e.type
  end

  test 'event can have its own templates' do
    e = events(:custom_event_1)
    assert_equal 'Custom Event 1', e.title
    assert_equal 'Custom description!', e.description
    assert_equal vulnerabilities(:cve_2011_3092).date, e.date
    assert_equal "Custom type!", e.type
  end

  test 'event can have embedded details' do
    e = events(:custom_event_2)
    assert_equal 'Custom CVE-2011-3092 Event 2', e.title
    assert_equal 'CVE-2011-3092: Regex was wrong.', e.description
    assert_equal vulnerabilities(:cve_2011_3092).date, e.date
    assert_equal "CVE-2011-3092 vulnerability", e.type
  end

  test 'event#by_fixes works' do
    v = Vulnerability.find_by(cve: 'CVE-2011-3092')
    expected = ['Fix: Strip CRs from *.in files to allow building from webkit.org',]
    actual = Event.by_fixes(v).map { |e| e.title }
    assert_equal expected, actual
  end

  test 'event query gets everything it needs' do
    v = Vulnerability.find_by(cve: 'CVE-2011-3092')
    expected = [
      1000.0,
      'Custom Event 1',
      'Custom CVE-2011-3092 Event 2',
      'Release 17!',
      'Release 19',
      'Fix: Strip CRs from *.in files to allow building from webkit.org',
    ]
    actual = Event.by_vulnerability(v).
                   map { |e| e.title }
    assert_equal expected, actual
  end

end
