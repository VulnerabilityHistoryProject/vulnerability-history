require 'test_helper'

class VulnerabilityTest < ActiveSupport::TestCase

  test 'fixtures are loaded' do
    assert Vulnerability.any?
  end

  test 'vuln fixture data are loaded' do
    assert_equal 'CVE-2011-3092', vulnerabilities(:cve_2011_3092).cve
  end

  test 'vuln has a fix commit' do
    fix_hash = 'f3e8965444b0b615ed8aabfcacc5840f6684c0c5'
    v = vulnerabilities(:cve_2011_3092)
    assert_equal fix_hash, v.fixes.first.commit.commit_hash
  end

  test 'vuln has two vcc commits' do
    exp_vcc_hashes = ['4bab3b214e92e0884af87c4ae9287da3daff5f3d',
                      '6fe4e841191055b69f5df33002e78d75bfdcf725']
    v = vulnerabilities(:cve_2011_3092)
    actuals = v.vccs.inject([]) {|arr, c| arr << c.commit.commit_hash ; arr }
    assert_equal exp_vcc_hashes, actuals
  end

  test 'vuln has some tags' do
    v = vulnerabilities(:cve_2011_3092)
    assert_equal ['bounty','defense in depth', 'lifetime-10'], v.tags.pluck(:shortname).sort
  end

  test 'vuln has some tag notes' do
    v = vulnerabilities(:cve_2011_3092)
    assert_equal ['Bounty note?$?','DID note??','lifetime note?'], v.vulnerability_tags.pluck(:note).sort
  end

  test 'vuln has a nickname' do
    example_nickname = 'FooBar'
    v = vulnerabilities(:cve_2011_3092)
    assert_equal example_nickname, v.nickname
  end

  test 'vuln has a no nickname' do
    v = vulnerabilities(:cve_2013_2878)
    assert_equal "", v.nickname
  end

  test 'unit test tags exist' do

  end

  test 'can find vuln by CVE' do
    v = vulnerabilities(:cve_2011_3092)
    assert_equal Vulnerability.find_by(cve: "CVE-2011-3092"), v
  end

  test 'cannot find vuln by CVE, if CVE does not exist' do
    assert_nil Vulnerability.find_by(cve: "CVE-2011-3096")
  end

  test 'similar vulnerabilities, same-cwe' do
    vuln = Vulnerability.sameCWE('CVE-2013-2878', 10, 0)
    vulnResults = vuln.map { |v| v['cve']}
    expected_results = %w(
      CVE-2016-1676
    )
    assert_equal expected_results, vulnResults, 'SQL statement is not correct'
  end

  test 'similar vulnerabilities, same-directory' do
    vuln = Vulnerability.sameDirectory('CVE-2011-3093', 10, 0)
    vulnResults = vuln.map { |v| v['cve']}
    expected_results = %w(
      CVE-2016-1676
      CVE-2011-3092
    )
    assert_equal expected_results, vulnResults, 'SQL statement is not correct'
  end

  test 'similar vulnerabilities, same-lessons' do
    vuln = Vulnerability.sameLessons('CVE-2013-2878', 10, 0)
    vulnResults = vuln.map { |v| v['cve']}
    expected_results = %w(
      CVE-2016-1676
      CVE-2011-3093
      CVE-2011-5904
    )
    assert_equal expected_results, vulnResults, 'SQL statement is not correct'
  end


end
