require 'test_helper'
require_relative '../../app/models/developer'
class DeveloperTest < ActiveSupport::TestCase
  test 'Fixtures are loaded' do
    assert Developer.any?
  end

  test 'dev fixture data are loaded' do
    assert_equal 'dglazkov@google.com', developers(:dglazkov).email
  end

  test 'checks if there are commits' do
    exp_commit_hashes = [
      'f3e8965444b0b615ed8aabfcacc5840f6684c0c5',
      '6fe4e841191055b69f5df33002e78d75bfdcf725'
    ]
    actuals = developers(:dglazkov).commits.collect(&:commit_hash)
    assert_equal exp_commit_hashes, actuals
  end

  test 'sanitize email' do
    testEmail = Developer.sanitize_validate_email "dglazkov+test@gmail.com"
    assert_equal testEmail, "dglazkov@gmail.com"
  end

  test 'sanitize wrong email' do
    testEmail = Developer.sanitize_validate_email "dglazkov+test@google.com"
    assert_equal testEmail, "dglazkov@chromium.org"
  end

  test 'sanitize non-email' do
    assert_raise EmailException do
      Developer.sanitize_validate_email "commits.initial"
    end
  end
  test 'Blacklist email' do
    assert_raise EmailException do
      Developer.sanitize_validate_email "test@googlegroups.com"
    end
  end
  test 'Blacklisted domain' do
    assert_raise EmailException do
      Developer.sanitize_validate_email "commit-bot@chromium.org"
    end
    assert_raise EmailException do
      Developer.sanitize_validate_email "reply@chromium.org"
    end
    assert_raise EmailException do
      Developer.sanitize_validate_email "chromium-reviews@chromium.org"
    end
  end
end
