require 'test_helper'
require 'coderay'
require 'yaml'
require 'kramdown'
require 'rinku'
require 'sanitize'

class ApplicationHelperTest < ActionView::TestCase

  test 'bold markdown' do
    input    = "**Bolded**"
    expected = "<p><strong>Bolded</strong></p>\n"
    assert_equal expected, markdown(input)
  end

  test 'links are preserved' do
    input =    "[Click Here](https://www.google.com)"
    expected = "<p><a href=\"https://www.google.com\">Click Here</a></p>\n"
    assert_equal expected, markdown(input)
  end

  # test 'blockquotes are still honored' do
  #   input =    '> Hi'
  #   expected = '<blockquote>Hi</blockquote'
  #   assert_equal expected, markdown(input)
  # end


  test 'remove html from markdown' do
    input =    "<b>Foo</b>"
    expected = "<p>Foo</p>\n"
    assert_equal expected, markdown(input)
  end

  test 'remove_script_tag' do
    input =    "<script>alert(1);</script>"
    expected = "<p>alert(1);</p>\n"
    assert_equal expected, markdown(input)
  end

  test 'auto linking' do
    input =    "https://www.google.com"
    expected = "<p><a href=\"https://www.google.com\">https://www.google.com</a></p>\n"
    assert_equal expected, markdown(input)
  end

  test 'auto linking ignores existing links' do
    input =    "<a href=\"https://www.google.com\">https://www.google.com</a>"
    expected = "<p><a href=\"https://www.google.com\">https://www.google.com</a></p>\n"
    assert_equal expected, markdown(input)
  end

  test 'integrating links, markdown, and included html' do
    input =    "<i>Hello</i> *World* https://www.example.com"
    expected = "<p>Hello <em>World</em> <a href=\"https://www.example.com\">https://www.example.com</a></p>\n"
    assert_equal expected, markdown(input)
  end

end
