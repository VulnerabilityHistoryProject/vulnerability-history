require "application_system_test_case"

class ContentTest < ApplicationSystemTestCase
  setup do
    Capybara.app_host = "https://alpha.vulnerabilityhistory.org"
    Capybara.run_server = false

    @start = filepaths_path
  end

  test 'map description' do
    visit @start
    gc = find('.grid-container')
    description_wrapper = gc.find('#offenders_visual')
    assert_equal "The map's outermost rings represent the end of each filepath. The center of the map represents the filepaths' root.", description_wrapper.text
  end

  test 'table button link' do
    visit @start
    gc = find('.grid-container')
    table_link = gc.find('#table-label')[:href]
    visit table_link
    assert_equal table_link, current_url
  end

  test 'map button link' do
    visit @start
    gc = find('.grid-container')
    table_link = gc.find('#table-label')[:href]
    visit table_link

    map_link = gc.find('#map-label')[:href]
    visit map_link
    assert_equal map_link, current_url
  end

  test 'table 10 count filter' do
    visit @start
    gc = find('.grid-container')
    table_link = gc.find('#table-label')[:href]
    visit table_link

    table = gc.find('#offenderTable')
    table_body = table.find('tbody')

    assert_equal 10, table_body.all('tr').length
  end

  test 'table 50 count filter' do
    visit @start
    gc = find('.grid-container')
    table_link = gc.find('#table-label')[:href]
    visit table_link

    filter = gc.find('.dataTables_length')
    filter.select 'Show 50'

    table = gc.find('#offenderTable')
    table_body = table.find('tbody')

    assert_equal 50, table_body.all('tr').length
  end

  test 'sort vulnerabilities alphabetically by project name' do
    visit @start
    gc = find('.grid-container')

    table_link = gc.find('#table-label')[:href]
    visit table_link

    table = gc.find('#offenderTable')

    table_head = table.find('thead')
    project_filter = table_head.all('tr')[0].all('th')[0]
    project_filter.click

    table_body = table.find('tbody')
    project_name_before = table_body.all('tr')[0].all('td')[0].text

    project_filter.click

    table_body = table.find('tbody')
    project_name_after = table_body.all('tr')[0].all('td')[0].text

    assert_equal -1, project_name_before.split('')[0] <=> project_name_after.split('')[0]
  end

  test 'sort vulnerabilities alphabetically by filepath' do
    visit @start
    gc = find('.grid-container')

    table_link = gc.find('#table-label')[:href]
    visit table_link

    table = gc.find('#offenderTable')

    table_head = table.find('thead')
    project_filter = table_head.all('tr')[0].all('th')[1]
    project_filter.click

    table_body = table.find('tbody')
    project_filepath_before = table_body.all('tr')[0].all('td')[1].text

    project_filter.click

    table_body = table.find('tbody')
    project_filepath_after = table_body.all('tr')[0].all('td')[1].text

    assert_equal -1, project_filepath_before.split('')[0] <=> project_filepath_after.split('')[0]
  end

  test 'sort vulnerabilities by number of fixes' do
    visit @start
    gc = find('.grid-container')

    table_link = gc.find('#table-label')[:href]
    visit table_link

    table = gc.find('#offenderTable')

    table_head = table.find('thead')
    project_filter = table_head.all('tr')[0].all('th')[2]
    project_filter.click

    table_body = table.find('tbody')
    project_fixes_before = table_body.all('tr')[0].all('td')[2].text

    project_filter.click

    table_body = table.find('tbody')
    project_fixes_after = table_body.all('tr')[0].all('td')[2].text
    assert project_fixes_before.to_i < project_fixes_after.to_i
  end

  test 'sort vulnerabilities by number of CVEs' do
    visit @start
    gc = find('.grid-container')

    table_link = gc.find('#table-label')[:href]
    visit table_link

    table = gc.find('#offenderTable')

    table_head = table.find('thead')
    project_filter = table_head.all('tr')[0].all('th')[3]
    project_filter.click

    table_body = table.find('tbody')
    project_fixes_before = table_body.all('tr')[0].all('td')[3].text

    project_filter.click

    table_body = table.find('tbody')
    project_fixes_after = table_body.all('tr')[0].all('td')[3].text
    assert project_fixes_before.to_i < project_fixes_after.to_i
  end
end