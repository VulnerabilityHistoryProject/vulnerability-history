require 'application_system_test_case'

# each of these will test looks and functionality
class HomeTest < ApplicationSystemTestCase
  test 'visiting the index' do
    visit(root_url)
    tb = find('.top-bar')

    # right side
    tb_left = tb.find('.top-bar-left')
    title = tb_left.find('a')
    assert(title[:href].split('/').length() == 3)     # should ensure the href is just /
    logo = title.find('img')
    assert_not_nil(logo)      # have no way of finding out whether or not the angler fish is the logo though
    assert_equal('The Vulnerability History Project', title.text)

    curr_url = current_url
    click_on('The Vulnerability History Project')
    assert_equal(curr_url, current_url)

    # left side
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    single_links = page_links.all('.right')
    link_num = 1
    single_links.each { |link|
      a = link.find('a')
      title = ''
      href = ''
      case link_num
      when 1
        title = 'Vulnerabilities'
        href = 'vulnerabilities'
      when 2
        title = 'Code'
        href = 'filepaths'
      when 3
        title = 'Articles'
        href = 'articles'
      end
      assert_equal(title, a.text)
      assert_equal(href, a[:href].split('/')[3])
      link_num += 1
    }
    submenu_links = page_links.all('.has-submenu')
    submenu_links.each{ |link|
      a = link.find('a')
      main_title = ''
      case link_num
      when 4
        main_title = 'Tags'
      when 5
        main_title = 'More'
      end
      assert_equal(main_title, a.text)
      submenu = link.find('.submenu', visible: false)     # the submenu isn't visible until hover, so the second argument is needed
      submenu_items = submenu.all('.is-submenu-item')
      submenu_num = 1
      # submenu_items.each { |item|
      #   submenu_item = item.find('a')
      #   submenu_title = ''
      #   submenu_href = ''
      #   print('here')
      #   print(a[:href].split('/')[3])
      #   case link_num
      #   when 4
      #     case submenu_num
      #     when 1
      #       submenu_title = 'All'
      #       submenu_href = ''
      #     when 2
      #       submenu_title = 'Projects'
      #     when 3
      #       submenu_title = 'CWEs'
      #     when 4
      #       submenu_title = 'Languages'
      #     when 5
      #       submenu_title = 'Lessons'
      #     when 6
      #       submenu_title = 'Severities'
      #     when 7
      #       submenu_title = 'Subsystems'
      #     end
      #   when 5
      #     case submenu_num
      #     when 1
      #       submenu_title = 'Case Studies'
      #     when 2
      #       submenu_title = 'How to Curate'
      #     when 3
      #       submenu_title = 'By the Numbers'
      #     when 4
      #       submenu_title = 'About Us'
      #     end
      #   end
      #   assert_equal(submenu_title, a.text)
        # assert_equal(submenu_href, a[:href].split[3])
        submenu_num += 1
      }
      link_num += 1
    }
  end
end
