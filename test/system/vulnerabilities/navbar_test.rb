
require "application_system_test_case"

class NavbarTest < ApplicationSystemTestCase
  setup do
    Capybara.app_host = "https://alpha.vulnerabilityhistory.org"
    Capybara.run_server = false

    @start = vulnerabilities_path

  end

  # home tab
  test 'vulnerabilities navbar home' do
    visit @start
    tb = find('.top-bar')
    tb_left = tb.find('.top-bar-left')
    home_a = tb_left.find('a')
    home_a_href = home_a[:href]
    home_a.click
    assert_equal home_a_href, current_url
  end

  # vulnerabilities tab
  test 'vulnerabilities navbar vulnerabilities' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    single_links = page_links.all('.right')
    vulnerabilities = single_links[0]
    vulnerabilities_a = vulnerabilities.find('a')
    vulnerabilities_a_href = vulnerabilities_a[:href]
    vulnerabilities_a.click
    assert_equal vulnerabilities_a_href, current_url 
  end

  # code tab
  test 'vulnerabilities navbar code' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    single_links = page_links.all('.right')
    code = single_links[1]
    code_a = code.find('a')
    code_a_href = code_a[:href]
    code_a.click
    assert_equal code_a_href, current_url 
  end

  # articles tab
  test 'vulnerabilities navbar articles' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    single_links = page_links.all('.right')
    articles = single_links[2]
    articles_a = articles.find('a')
    articles_a_href = articles_a[:href]
    articles_a.click
    assert_equal articles_a_href, current_url 
  end

  # tags/all
  test 'vulnerabilities navbar tags/all' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[0]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    all = tags_ul_li[0]
    all_a = all.find('a', visible: false)
    all_a_href = all_a[:href]
    visit all_a_href        # since the submenu tabs aren't easily visible, the test must visit the address. may try to automate hovering in the future
    assert_equal all_a_href, current_url 
  end

  # tags/projects
  test 'vulnerabilities navbar tags/projects' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[0]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    projects = tags_ul_li[1]
    projects_a = projects.find('a', visible: false)
    projects_a_href = projects_a[:href]
    visit projects_a_href 
    assert_equal projects_a_href, current_url
  end

  # tags/cwes
  test 'vulnerabilities navbar tags/cwes' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[0]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    cwes = tags_ul_li[2]
    cwes_a = cwes.find('a', visible: false)
    cwes_a_href = cwes_a[:href]
    visit cwes_a_href 
    assert_equal cwes_a_href, current_url
  end

  # tags/languages
  test 'vulnerabilities navbar tags/languages' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[0]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    languages = tags_ul_li[3]
    languages_a = languages.find('a', visible: false)
    languages_a_href = languages_a[:href]
    visit languages_a_href 
    assert_equal languages_a_href, current_url 
  end

  # tags/lessons
  test 'vulnerabilities navbar tags/lessons' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[0]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    lessons = tags_ul_li[4]
    lessons_a = lessons.find('a', visible: false)
    lessons_a_href = lessons_a[:href]
    visit lessons_a_href 
    assert_equal lessons_a_href, current_url 
  end

  # tags/severities
  test 'vulnerabilities tags/severities' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[0]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    severities = tags_ul_li[5]
    severities_a = severities.find('a', visible: false)
    severities_a_href = severities_a[:href]
    visit severities_a_href 
    assert_equal severities_a_href, current_url 
  end

  # tags/subsystems
  test 'vulnerabilities tags/subsystems' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[0]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    subsystems = tags_ul_li[6]
    subsystems_a = subsystems.find('a', visible: false)
    subsystems_a_href = subsystems_a[:href]
    visit subsystems_a_href 
    assert_equal subsystems_a_href, current_url 
  end

  # more/case studies
  test 'vulnerabilities more/case studies' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[1]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    case_studies = tags_ul_li[0]
    case_studies_a = case_studies.find('a', visible: false)
    case_studies_a_href = case_studies_a[:href]
    visit case_studies_a_href 
    assert_equal case_studies_a_href, current_url 
  end

  # more/how to curate
  test 'vulnerabilities more/how to curate' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[1]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    how_to_curate = tags_ul_li[1]
    how_to_curate_a = how_to_curate.find('a', visible: false)
    how_to_curate_a_href = how_to_curate_a[:href]
    visit how_to_curate_a_href
    assert_equal how_to_curate_a_href, current_url 
  end

  # more/by the numbers
  test 'vulnerabilities more/by the numbers' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[1]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    by_the_numbers = tags_ul_li[2]
    by_the_numbers_a = by_the_numbers.find('a', visible: false)
    by_the_numbers_a_href = by_the_numbers_a[:href]
    visit by_the_numbers_a_href 
    assert_equal by_the_numbers_a_href, current_url 
  end

  # more/about us
  test 'vulnerabilities more/about us' do
    visit @start
    tb = find('.top-bar')
    tb_right = tb.find('.top-bar-right')
    page_links = tb_right.find('.dropdown')
    submenu_links = page_links.all('.has-submenu')
    tags = submenu_links[1]
    tags_ul = tags.find('ul', visible: false)
    tags_ul_li = tags.all('li', visible: false)
    about_us = tags_ul_li[3]
    about_us_a = about_us.find('a', visible: false)
    about_us_a_href = about_us_a[:href]
    visit about_us_a_href 
    assert_equal about_us_a_href, current_url 
  end
end
