require "application_system_test_case"

class TableTest < ApplicationSystemTestCase
  setup do
    Capybara.app_host = "https://alpha.vulnerabilityhistory.org"
    Capybara.run_server = false

    @start = "/vulnerabilities"
    Rails.cache.clear
  end

  test 'vulnerabilities table nav pagination' do
    visit @start
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]
   
    datatable_wrapper = vulnerability_tabs.find('#datatable_wrapper')
    table = datatable_wrapper.find('table')
    table_body = table.find('tbody')
    nav = datatable_wrapper.find("#table-nav-top")
    pagination = nav.find('.dataTables_length').find('label')
    assert_equal "Show", pagination.text[0..3]

    # show 10 vulnerabilities on page
    pagination.select('10')
    assert_equal 10, table_body.all('tr').length

    # show 25 vulnerabilities on page
    pagination.select('25')
    assert_equal 25, table_body.all('tr').length

    # show 50 vulnerabilities on page
    pagination.select('50')
    assert_equal 50, table_body.all('tr').length

    # show 100 vulnerabilities on page
    pagination.select('100')
    assert_equal 100, table_body.all('tr').length
  end

  test 'vulnerabilities table nav filter' do
    visit @start 
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]

    nav = gc.find("#table-nav-top")

    # just test a few filters since there are so many
    toggle_wrapper = nav.find('.table-nav-drawer-toggle')
    toggle_wrapper.find('label').click

    filter = nav.all('.table-nav-filter')[1]
    filter.select('Lesson: Distrust Input')

    table_body = gc.find('tbody')
    tags = table_body.all('tr')[0].all('td')[3].all('span')[0].text

    assert tags.include? 'Lesson: Distrust Input'

    refresh
    nav = find("#table-nav-top")
    toggle_wrapper = nav.find('.table-nav-drawer-toggle')
    toggle_wrapper.find('label').click

    # Test for "CWE-126: Buffer Over-read" label
    filter = nav.all('.table-nav-filter')[0]
    filter.select('CWE-126: Buffer Over-read')

    cwe = find('tbody').all('tr')[0]
    cwe_span = cwe.all('span')[0]
    tags = cwe_span.text

    assert tags.include? 'CWE-126: Buffer Over-read'

    # Test for "CWE-908: Use of Uninitialized Resource" label
    filter = nav.all('.table-nav-filter')[0]
    filter.select("CWE-908: Use of Uninitialized Resource")


    cwe = find('tbody').all('tr')[0]
    cwe_span = cwe.all('span')[0]
    tags = cwe_span.text
    # tags = find('tbody').all('tr')[0].all('td')[3].all('span')[0].text

    assert tags.include? 'CWE-908: Use of Uninitialized Resource'
  end

  test 'search bar filter' do
    visit @start
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]

    table = gc.find('table')
    nav = gc.find("#table-nav-top")
    filter = nav.find('.table-nav-search')
    search_bar = filter.find('input')

    search_bar.fill_in with: 'The Example'
    first_result_name = table.find('tbody').all('tr')[0].text
    assert first_result_name.include? 'The Example'
  end

  test 'thead date' do
    visit @start
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]

    table_head = gc.find('thead').find('tr')
    filter = table_head.all('th')[1]
    filter.click

    table_body = gc.find('tbody')
    before = table_body.all('tr')[0].all('td')[1].text
    date_before = Date.new(before[0,4].to_i, before[5,2].to_i, before[8,2].to_i)

    filter.click

    table_body = gc.find('tbody')
    after = table_body.all('tr')[1].all('td')[1].text
    date_after = Date.new(after[0,4].to_i, after[5,2].to_i, after[8,2].to_i)

    assert date_before < date_after
  end

  test 'thead upvotes' do
    visit @start
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]

    table_head = gc.find('thead').find('tr')
    filter = table_head.all('th')[2]
    filter.click

    upvotes_before = find('tbody').all('tr')[0].all('td')[2].text.to_i

    filter.click

    upvotes_after = find('tbody').all('tr')[0].all('td')[2].text.to_i

    assert upvotes_before < upvotes_after
  end
end
