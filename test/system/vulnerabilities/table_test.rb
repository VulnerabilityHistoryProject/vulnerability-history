require "application_system_test_case"

class TableTest < ApplicationSystemTestCase
  setup do
    Capybara.app_host = "https://alpha.vulnerabilityhistory.org"
    Capybara.run_server = false

    @start = vulnerabilities_path
    Rails.cache.clear
  end


  test 'vulnerabilities table nav pagination' do
    visit @start
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]
   
    datatable_wrapper = vulnerability_tabs.find('#datatable_wrapper')
    table = datatable_wrapper.find('table')
    table_body = table.find('tbody')
    nav = datatable_wrapper.find("#table-nav-top")
    pagination = nav.find('.dataTables_length').find('label')
    assert_equal "Show", pagination.text[0..3]

    # show 10 vulnerabilities on page
    pagination.select('10')
    assert_equal 10, table_body.all('tr').length

    # show 25 vulnerabilities on page
    pagination.select('25')
    assert_equal 25, table_body.all('tr').length

    # show 50 vulnerabilities on page
    pagination.select('50')
    assert_equal 50, table_body.all('tr').length

    # show 100 vulnerabilities on page
    pagination.select('100')
    assert_equal 100, table_body.all('tr').length
  end

  test 'vulnerabilities table nav filter' do
    visit @start 
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]
    datatable_wrapper = vulnerability_tabs.find('#datatable_wrapper')
    page_row = datatable_wrapper.find('.row').find('.pagination')
    table = datatable_wrapper.find('table')
    table_body = table.find('tbody')
    nav = datatable_wrapper.find("#table-nav-top")

    # just test a few filters since there are so many - one that brings a lot, a little, and none
    toggle_wrapper = nav.find('.table-nav-drawer-toggle')
    filter_toggle = toggle_wrapper.find('label')
    filter_toggle.click

    filter = nav.all('.table-nav-filter')[1]
    filter.select('Lesson: Distrust Input')
    assert_equal 10, table_body.all('tr').length
    assert_equal '43', page_row.all('li')[-2].text

    refresh
    nav = find("#table-nav-top")
    toggle_wrapper = nav.find('.table-nav-drawer-toggle')
    filter_toggle = toggle_wrapper.find('label')
    filter_toggle.click

    filter = nav.all('.table-nav-filter')[0]
    filter.select('CWE-126: Buffer Over-read')
    table_body = find('tbody')
    assert_equal 3, table_body.all('tr').length

    filter = nav.all('.table-nav-filter')[0]
    filter.select("CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')")
    assert_equal 1, table_body.all('tr').length
    assert_equal 'No matching records found', table_body.find('tr').find('td').text
  end

  test 'search bar filter' do
    visit @start
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]
    datatable_wrapper = vulnerability_tabs.find('#datatable_wrapper')
    table = datatable_wrapper.find('table')
    nav = datatable_wrapper.find("#table-nav-top")

    filter = nav.find('.table-nav-search')
    search_bar = filter.find('input')

    search_bar.fill_in with: 'The Example'
    table_body = table.find('tbody')
    assert_equal 8, table_body.all('tr').length
  end

  test 'thead vulnerability' do
    visit @start
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]
    datatable_wrapper = vulnerability_tabs.find('#datatable_wrapper')
    table = datatable_wrapper.find('table')
    table_head = table.find('thead').find('tr')
    filter = table_head.all('th')[0]
    filter.click

    table_body = table.find('tbody')
    assert_equal 'Convoluted aka CVE-2017-5107', table_body.all('tr')[0].all('td')[0].find('.vuln-table-title').text
  end

  # TODO wrong indexing: table_head.all('th')[1] is the DATE not the DESCRIPTION
  # test 'thead description' do
  #   visit @start
  #   gc = find('.grid-container')
  #   vulnerability_tabs = gc.all('.tabs-panel')[0]
  #   assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]
  #   datatable_wrapper = vulnerability_tabs.find('#datatable_wrapper')
  #   table = datatable_wrapper.find('table')
  #   table_head = table.find('thead').find('tr')
  #   filter = table_head.all('th')[1]
  #   filter.click
  #
  #   table_body = table.find('tbody')
  #   assert_equal 'Infinity SegFault aka CVE-2011-1112', table_body.all('tr')[0].all('td')[0].find('.vuln-table-title').text
  # end

  test 'thead date' do
    visit @start
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]
    datatable_wrapper = vulnerability_tabs.find('#datatable_wrapper')
    table = datatable_wrapper.find('table')
    table_head = table.find('thead').find('tr')
    filter = table_head.all('th')[1]
    filter.click

    table_body = table.find('tbody')
    assert_equal 'Sioux aka CVE-1999-1199', table_body.all('tr')[0].all('td')[0].text
  end

  test 'thead upvotes' do
    visit @start
    gc = find('.grid-container')
    vulnerability_tabs = gc.all('.tabs-panel')[0]
    assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]
    datatable_wrapper = vulnerability_tabs.find('#datatable_wrapper')
    table = datatable_wrapper.find('table')
    table_head = table.find('thead').find('tr')
    filter = table_head.all('th')[2]
    filter.click

    table_body = table.find('tbody')
    assert_equal 'CVE-2012-2852', table_body.all('tr')[0].all('td')[0].text
  end

  # TODO Can't filter by tags
  # test 'thead tags' do
  #   visit @start
  #   gc = find('.grid-container')
  #   vulnerability_tabs = gc.all('.tabs-panel')[0]
  #   assert_equal 'is-active', vulnerability_tabs[:class][/is-active/]
  #   datatable_wrapper = vulnerability_tabs.find('#datatable_wrapper')
  #   table = datatable_wrapper.find('table')
  #   table_head = table.find('thead').find('tr')
  #   filter = table_head.all('th')[4]
  #   filter.click
  #
  #   table_body = table.find('tbody')
  #   assert_equal 'CVE-2016-5153', table_body.all('tr')[0].all('td')[0].text
  # end
end
