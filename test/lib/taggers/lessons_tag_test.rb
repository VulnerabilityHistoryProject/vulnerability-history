require 'test_helper'
require 'taggers/lessons_tagger'

class LessonsTagTest < ActiveSupport::TestCase
  test 'lesson tags created' do
    t = LessonsTagger.new
    t.create_tags
    assert_equal(1, Tag.where(shortname: 'lesson-defense').size)
    assert_equal(1, Tag.where(shortname: 'lesson-least-privilege').size)
    assert_equal(1, Tag.where(shortname: 'lesson-optional-frameworks').size)
    assert_equal(1, Tag.where(shortname: 'lesson-native-wrappers').size)
    assert_equal(1, Tag.where(shortname: 'lesson-distrust-input').size)
    assert_equal(1, Tag.where(shortname: 'lesson-obscurity').size)
    assert_equal(1, Tag.where(shortname: 'lesson-serial').size)
    assert_equal(1, Tag.where(shortname: 'lesson-environment').size)
    assert_equal(1, Tag.where(shortname: 'lesson-secure-by-default').size)
    assert_equal(1, Tag.where(shortname: 'lesson-yagni').size)
    assert_equal(1, Tag.where(shortname: 'lesson-complex-inputs').size)
  end

  test 'lessons tags not duplicated' do
    t = LessonsTagger.new
    tag_count_before = Tag.all.size
    if Tag.exists?(shortname: 'lesson-defense') and
        Tag.exists?(shortname: 'lesson-least privilege') and
        Tag.exists?(shortname: 'lesson-optional frameworks') and
        Tag.exists?(shortname: 'lesson-wrappers') and
        Tag.exists?(shortname: 'lesson-distrust input') and
        Tag.exists?(shortname: 'lesson-obscurity') and
        Tag.exists?(shortname: 'lesson-serial') and
        Tag.exists?(shortname: 'lesson-environment') and
        Tag.exists?(shortname: 'lesson-secure by default') and
        Tag.exists?(shortname: 'lesson-yagni') and
        Tag.exists?(shortname: 'lesson-complex inputs')
      t.create_tags
      tag_count_after = Tag.all.size
      assert_equal(tag_count_before, tag_count_after)
    end
  end

  test 'complex inputs tag applied' do
    t = LessonsTagger.new
    t.create_tags
    t.apply_tags
    tag = Tag.find_by(shortname: 'complex-inputs')
    assert(tag)
    vt = VulnerabilityTag.find_by(tag_id: tag.id)
    assert(vt)
    assert(vt.note)
  end

end
