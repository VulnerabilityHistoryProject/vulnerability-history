require 'test_helper'
require_relative '../../lib/tasks/scheduler_cve_methods'

class SchedulerTest < ActiveSupport::TestCase
  parsedToSave = {
    "CVE"=>"CVE-2011-1111",
    "announced" => "2012-05-15",
    "bounty"=>"$1000.00",
    "bounty_announced"=>{"date"=>"2012-05-15",
    "url"=>"http://googlechromereleases.blogspot.com"},
    "code_reviews"=>[39004],
    "bugs"=>[122337],
    "fixes"=>["f3e8965444b0b615ed8aabfcacc5840f6684c0c5"],
    "vccs"=>[
      {"4bab3b214e92e0884af87c4ae9287da3daff5f3d"=>{"note"=>"this is a note"}},
      {"6fe4e841191055b69f5df33002e78d75bfdcf725"=>{"note"=>"another note"}}]
  }

  test "vulnerabilityData adds Vulnerability to db" do
    vulnerabilityData(parsedToSave)
    added_vuln = Vulnerability.find_by cve: "CVE-2011-1111"
    assert_equal "CVE-2011-1111", added_vuln.cve
    assert_equal parsedToSave.except("cve"), added_vuln.notes
  end
  test "vulnerabilityData adds Fix to db" do
    vulnerabilityData(parsedToSave)
    added_vuln = Vulnerability.find_by cve: "CVE-2011-1111"
    added_fix = Fix.find_by vulnerability_id: added_vuln.id
    assert_equal added_vuln.id, added_fix.vulnerability_id
  end
  test "vulnerabilityData adds Vcc to db" do
    vulnerabilityData(parsedToSave)
    added_vuln = Vulnerability.find_by cve: "CVE-2011-1111"
    added_vcc = Vcc.find_by vulnerability_id: added_vuln.id
    assert_equal added_vuln.id, added_vcc.vulnerability_id
  end
  test "vulnerabilityData adds Event to db" do
    vulnerabilityData(parsedToSave)
    added_vuln = Vulnerability.find_by cve: "CVE-2011-1111"
    added_event = Event.find_by detail_type: "Vulnerability"
    assert_equal "Vulnerability", added_event.detail_type
  end
end
