class BountyEvents
  def generate
    Vulnerability.all.each do |vuln|
      if has_bounty? vuln
        Event.create!(
          detail: vuln,
          style: style,
          title_template: 'Bounty awarded for :title:',
          type_template: 'bounty',
          date_template: vuln.notes['bounty']['amount'],
          description_template:
            File.read(File.expand_path("../markdown/bounty.md", __FILE__,))
        )
      end
    end
  end

  private

  # Returns true if the vulnerability has a bounty
  def has_bounty?(v)
    !v.notes['bounty']['amount'].nil?
  end

  def style
    @style ||= Style.find_or_create_by!(
      name: 'bounty',
      icon: 'monetization_on',
      color: '#1FA31D'
    )
  end

end
