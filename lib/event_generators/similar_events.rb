class SimilarEvents

  def generate
    x = 1
    vulns = Vulnerability.all
    vulns2 = vulns.drop(1)
    total = vulns.length
    vulns.each do |vuln1|
      puts "Comparing vulns: #{x}/#{total}"
      vulns2.each do |vuln2|
        cwe_events(vuln1, vuln2)
        ret = similar_directory_events(vuln1, vuln2)
        if ret == "None"
          break
        end
      end
      x += 1
      vulns2 = vulns2.drop(1)
    end
  end

  def cwe_events(vuln1, vuln2)
    if vuln1.notes['CWE'] and vuln2.notes['CWE'] and vuln1.notes['CWE'] == vuln2.notes['CWE']
      e = Event.create!(
        detail: vuln2,
        style: style,
        title_template: "A similar vulnerability to this one was announced at this time. It has the same CWE type.",
        date_template:  vuln2.announced,
        description_template: "Similar vulnerability: #{vuln2.cve} has the same CWE (#{vuln2.notes['CWE']})"
      )
      vuln1.events << e
      vuln1.save

      e = Event.create!(
        detail: vuln1,
        style: style,
        title_template: "A similar vulnerability to this one was announced at this time. It has the same CWE type.",
        date_template:  vuln1.announced,
        description_template: "Similar vulnerability: #{vuln1.cve} has the same CWE (#{vuln1.notes['CWE']})"
      )
      vuln2.events << e
      vuln2.save
    end
  end

  def similar_directory_events(vuln1, vuln2)
    vuln_files1 = Filepath.vulnerable(vuln1)
    vuln_files2 = Filepath.vulnerable(vuln2)
    if vuln_files1.length == 0
      return "None"
    elsif vuln_files2.length == 0
      return
    else
      vuln_files1.each do |vf|
        vuln_files2.each do |vf2|
          dirs1 = vf.filepath.split('/')[0...-1].join('/')
          dirs2 = vf2.filepath.split('/')[0...-1].join('/')
          if dirs1 == dirs2
            e = Event.create!(
              detail: vuln2,
              style: style,
              title_template: "A vulnerability that was fixed in the same directory was announced.",
              date_template:  vuln2.announced,
              description_template: "Similar vulnerability: #{vuln2.cve} is also in #{dirs1}"
            )
            vuln1.events << e
            vuln1.save

            e = Event.create!(
              detail: vuln1,
              style: style,
              title_template: "A vulnerability that was fixed in the same directory was announced.",
              date_template:  vuln1.announced,
              description_template: "Similar vulnerability: #{vuln1.cve} is also in #{dirs1}"
            )
            vuln2.events << e
            vuln2.save
            return
          end
        end
      end
    end
  end

  def style
    @style ||= Style.find_or_create_by!(
      name: 'similar',
      icon: 'bug_report',
      color: '#ffaa00',
    )
  end

end
