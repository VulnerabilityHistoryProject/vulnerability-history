class SimilarEvents

  def generate
    x = 1
    vulns = Vulnerability.all
    total = vulns.length
    vulns.each do |vuln|
      puts "#{x}/#{total}"
      vulns.each do |vuln2|
        if vuln != vuln2
          if vuln.notes['CWE'] and vuln2.notes['CWE'] and vuln.notes['CWE'] == vuln2.notes['CWE']
            e = Event.create!(
              detail: vuln2,
              style: style,
              title_template: vuln2.cve + " has same cve",
              date_template:  vuln2.announced,
              description_template: vuln2.cve + " has the same CWE"
            )
            vuln.events << e
            vuln.save
          end
          if similar_files(vuln, vuln2)
            e = Event.create!(
              detail: vuln2,
              style: style,
              title_template: vuln2.cve + " is in same directorry",
              date_template:  vuln2.announced,
              description_template: vuln2.cve + " is in same directory"
            )
            vuln.events << e
            vuln.save
          end
        end
      end
      x += 1
    end
  end

  def similar_files(vuln, vuln2)
    vuln_files1 = Filepath.vulnerable(vuln)
    vuln_files2 = Filepath.vulnerable(vuln2)
    if vuln_files1.length == 0 or vuln_files2.length == 0
      return "None"
    elsif vuln_files2.length == 0:
      return false
    else
      vuln_files1.each do |vf|
        vuln_files2.each do |vf2|
          dirs1 = vf.filepath.split('/')[0...-1]
          pp dirs1
          dirs2 = vf2.filepath.split('/')
          if dirs1.length != dirs2.length
            return false
          else
            i = 0
            while i < dirs1.length
              if dirs1[i] != dirs2[i]
                return false
              end
              i += 1
            end
            return true
          end
        end
    end
  end

  def style
    @style ||= Style.find_or_create_by!(
      name: 'similar',
      icon: 'lock',
      color: '#6FD56E',
    )
  end

end
