class SimilarEvents

  def generate
    logger = Logger.new(STDOUT, progname: 'data:events:similar')
    logger.info "Similar CWE events"
    cwe_events()
    logger.info "Same directory events"
    similar_directory_events()
  end

  def normalized_cwe_string(cwe)
    cwe.to_s.gsub(/[^0-9]/,'').to_i
  end

  def cwe_events()
    events = []
    vuln_events = []
    query = "SELECT vt1.vulnerability_id AS vuln1_id, vt2.vulnerability_id AS vuln2_id, v2.announced AS announced, v2.cve AS cve, t1.name AS cwe FROM vulnerability_tags AS vt1 "
    query += "INNER JOIN vulnerability_tags AS vt2 ON (vt1.tag_id = vt2.tag_id AND vt1.id <> vt2.id) "
    query += "INNER JOIN vulnerabilities AS v2 ON (vt2.vulnerability_id = v2.id) "
    query += "INNER JOIN tags AS t1 ON (t1.id = vt1.tag_id) "
    query += "WHERE t1.name LIKE 'CWE%'"
    results = ActiveRecord::Base.connection.execute(query)
    results.each do |vuln|
      e = Event.new(
        style: cwe_style,
        event_type: 'Same CWE',
        title: "A similar vulnerability to this one was announced at this time. It has the same CWE type.",
        date:  vuln['announced'],
        description: "Similar vulnerability: #{vuln['cve']} has the same CWE 119"
      )
      events << e
      vuln_events << VulnerabilityEvent.new(vulnerability_id: vuln['vuln1_id'], event: e)
    end
    Event.import events
    VulnerabilityEvent.import vuln_events
  end

  def similar_directory_events()
    events = []
    vuln_events = []
    query = "SELECT DISTINCT v1.id AS vuln1_id, v2.id AS vuln2_id, v2.announced AS announced, v2.cve AS cve, fp1.filepath AS fp, fp2.filepath FROM vulnerabilities AS v1 "
    query += "INNER JOIN vulnerabilities AS v2 ON (v1 <> v2) "
    query += "INNER JOIN fixes AS f1 ON (f1.vulnerability_id = v1.id) "
    query += "INNER JOIN fixes AS f2 ON (f2.vulnerability_id = v2.id) "
    query += "INNER JOIN commits AS c1 ON c1.id = f1.commit_id "
    query += "INNER JOIN commits AS c2 ON c2.id = f2.commit_id "
    query += "INNER JOIN commit_filepaths AS cf1 ON cf1.commit_id = c1.id "
    query += "INNER JOIN commit_filepaths AS cf2 ON cf2.commit_id = c2.id "
    query += "INNER JOIN filepaths AS fp1 ON cf1.filepath_id = fp1.id "
    query += "INNER JOIN filepaths AS fp2 ON cf2.filepath_id = fp2.id "
    query += "WHERE substring(fp1.filepath from 0 for (length(fp1.filepath) - position('/' in reverse(fp1.filepath)) + 1)) = substring(fp2.filepath from 0 for (length(fp2.filepath) - position('/' in reverse(fp2.filepath)) + 1))"
    results = ActiveRecord::Base.connection.execute(query)
    results.each do |vuln|
      dir = vuln['fp'].split('/')[0...-1].join('/')
      e = Event.new(
        style: dir_style,
        event_type: 'Same Directory',
        title: "A vulnerability that was fixed in the same directory was announced.",
        date:  vuln['announced'],
        description: "Similar vulnerability: #{vuln['cve']} is also in #{dir}"
      )
      events << e
      vuln_events << VulnerabilityEvent.new(vulnerability_id: vuln['vuln1_id'], event: e)
    end
    Event.import events
    VulnerabilityEvent.import vuln_events
  end

  def cwe_style
    @cwe_style ||= Style.find_or_create_by!(
      name: 'Similar CWE',
      icon: 'bug_report',
      color: '#BB55FF',
    )
  end

  def dir_style
    @dir_style ||= Style.find_or_create_by!(
      name: 'Similar Directory',
      icon: 'bug_report',
      color: '#ffaa00',
    )
  end

end
