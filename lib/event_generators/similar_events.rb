require_relative '../../app/helpers/application_helper'
require 'timing_logger'

class SimilarEvents
  include ApplicationHelper

  def initialize(project, log = TimingLogger.new(STDOUT, 'data:events:similar'))
    @project = project
    @log = log
    @cwe_desc_template = <<~EOSTR
      :CVE: was reported.
      It shares a CWE with this vulnerability, *:CWE_NAME:*.

      See other cases of [:tags: :CWE_NAME:](/tags/:CWE_SLUG:).
    EOSTR

    @cwe_title_template = <<~EOSTR
      Another :CWE_NAME: vulnerability announced"
    EOSTR
  end

  def generate
    @log.info "Same CWE events"
    cwe_events()
    @log.info "Same directory events"
    similar_directory_events()
  end

  def normalized_cwe_string(cwe)
    cwe.to_s.gsub(/[^0-9]/,'').to_i
  end

  def cwe_events()
    events = []
    vuln_events = []
    query = <<~EOSQL
    SELECT vt1.vulnerability_id AS vuln1_id,
           vt2.vulnerability_id AS vuln2_id,
           v2.announced AS announced,
           v2.cve AS cve,
           t1.name AS cwe,
           t1.shortname AS tag_shortname
    FROM vulnerability_tags AS vt1
      INNER JOIN vulnerability_tags AS vt2 ON (vt1.tag_id = vt2.tag_id AND vt1.id <> vt2.id)
      INNER JOIN vulnerabilities AS v2 ON (vt2.vulnerability_id = v2.id)
      INNER JOIN tags AS t1 ON (t1.id = vt1.tag_id)
      WHERE t1.name LIKE 'CWE%'
      AND v2.project_id = '#{@project.id}'
    EOSQL
    results = ActiveRecord::Base.connection.execute(query)
    results.each do |vuln|
      e = Event.new(
        style: cwe_style,
        event_type: 'same cwe',
        title: @cwe_title_template.gsub(':CWE_NAME:',friendly_cwe(vuln['cwe'])),
        date:  vuln['announced'],
        description: @cwe_desc_template.gsub(':CVE:', vuln['cve'])
                                       .gsub(':CWE_NAME:', vuln['cwe'])
                                       .gsub(':CWE_SLUG:', vuln['tag_shortname']),
        start_hidden: false
      )
      events << e
      vuln_events << VulnerabilityEvent.new(vulnerability_id: vuln['vuln1_id'], event: e)
    end
    @log.info 'Similar CWE events import'
    Event.import events
    VulnerabilityEvent.import vuln_events
  end

  def similar_directory_events()
    events = []
    vuln_events = []
    query = <<~EOSQL
    SELECT DISTINCT v1.id AS vuln1_id,
                    v2.id AS vuln2_id,
                    v2.announced AS announced,
                    v2.cve AS cve,
                    fp1.filepath AS fp,
                    fp2.filepath
    FROM vulnerabilities AS v1
      INNER JOIN vulnerabilities AS v2 ON (v1.id <> v2.id AND v1.project_id = v2.project_id)
      INNER JOIN fixes AS f1 ON (f1.vulnerability_id = v1.id)
      INNER JOIN fixes AS f2 ON (f2.vulnerability_id = v2.id)
      INNER JOIN commits AS c1 ON c1.id = f1.commit_id
      INNER JOIN commits AS c2 ON c2.id = f2.commit_id
      INNER JOIN commit_filepaths AS cf1 ON cf1.commit_id = c1.id
      INNER JOIN commit_filepaths AS cf2 ON cf2.commit_id = c2.id
      INNER JOIN filepaths AS fp1 ON cf1.filepath_id = fp1.id
      INNER JOIN filepaths AS fp2 ON cf2.filepath_id = fp2.id
      WHERE fp1.dir = fp2.dir
            AND fp1.project_id = fp2.project_id
            AND fp1.project_id = '#{@project.id}'
    EOSQL
    results = ActiveRecord::Base.connection.execute(query)
    results.each do |vuln|
      dir = vuln['fp'].split('/')[0...-1].join('/')

      e = Event.new(
        style: dir_style,
        event_type: 'same directory',
        title: "#{cve_link} fixed in same directory #{dir}",
        date:  vuln['announced'],
        description: (<<~EOSTR
            A vulnerability, #{vuln['cve']} that was also fixed in this
            vulnerability's directory (#{dir}) was announced.
          EOSTR
        ),
        start_hidden: false
      )
      events << e
      vuln_events << VulnerabilityEvent.new(vulnerability_id: vuln['vuln1_id'], event: e)
    end
    @log.info 'Same directory events import'
    Event.import events
    @log.info 'Same directory events linkage import'
    VulnerabilityEvent.import vuln_events
    @log.info 'Same directory events linkage done'
  end

  def cwe_style
    @cwe_style ||= Style.find_or_create_by!(
      name: 'Same CWE',
      icon: 'bug_report',
      color: '#BB55FF',
    )
  end

  def dir_style
    @dir_style ||= Style.find_or_create_by!(
      name: 'Same Directory',
      icon: 'bug_report',
      color: '#ffaa00',
    )
  end

end
