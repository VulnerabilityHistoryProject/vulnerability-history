class SimilarEvents

  def generate
    cwe_events()

  end

  def cwe_events()
    vuln_events = []
    sql = "SELECT vt1.vulnerability_id AS vuln1_id, vt2.vulnerability_id AS vuln2_id FROM vulnerability_tags AS vt1 INNER JOIN vulnerability_tags AS vt2 ON (vt1.tag_id = vt2.tag_id AND vt1.id <> vt2.id) INNER JOIN tags AS t1 ON (t1.id = vt1.tag_id) WHERE t1.name LIKE 'CWE%'"
    results = ActiveRecord::Base.connection.execute(sql)
    results.each do |vuln|
      vuln1 = Vulnerability.select('*').where("id = #{vuln['vuln1_id']}")[0]
      vuln2 = Vulnerability.select('*').where("id = #{vuln['vuln2_id']}")[0]
      e = Event.create!(
        detail: vuln2,
        style: style,
        type_template: 'same cwe',
        title_template: "A similar vulnerability to this one was announced at this time. It has the same CWE type.",
        date_template:  vuln2.announced,
        description_template: "Similar vulnerability: #{vuln2.cve} has the same CWE (#{vuln2.notes['CWE']})"
      )
      vuln_events << VulnerabilityEvent.new(vulnerability: vuln1, event: e)
    end
    VulnerabilityEvent.import vuln_events
  end

  def similar_directory_events(vuln1, vuln2)
    vuln_files1 = Filepath.vulnerable(vuln1)
    vuln_files2 = Filepath.vulnerable(vuln2)
    if vuln_files1.length == 0
      return "None"
    elsif vuln_files2.length == 0
      return
    else
      vuln_files1.each do |vf|
        vuln_files2.each do |vf2|
          dirs1 = vf.filepath.split('/')[0...-1].join('/')
          dirs2 = vf2.filepath.split('/')[0...-1].join('/')
          if dirs1 == dirs2
            e = Event.new(
              detail: vuln2,
              style: style,
              type_template: 'same directory',
              title_template: "A vulnerability that was fixed in the same directory was announced.",
              date_template:  vuln2.announced,
              description_template: "Similar vulnerability: #{vuln2.cve} is also in #{dirs1}"
            )
            vuln1.events << e
            vuln1.save

            e = Event.new(
              detail: vuln1,
              style: style,
              type_template: 'same directory',
              title_template: "A vulnerability that was fixed in the same directory was announced.",
              date_template:  vuln1.announced,
              description_template: "Similar vulnerability: #{vuln1.cve} is also in #{dirs1}"
            )
            vuln2.events << e
            vuln2.save
            return
          end
        end
      end
    end
  end

  def style
    @style ||= Style.find_or_create_by!(
      name: 'similar',
      icon: 'bug_report',
      color: '#ffaa00',
    )
  end

end
