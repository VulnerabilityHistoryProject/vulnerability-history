require 'json'
require 'date'

class WeeklyReportEvents

  def cve_from_filename(f)
    f.match(/.*(?<cve>CVE-.*-.*)-weekly.json/)[:cve]
  end

  def generate(repo_path)
    events = []
    Dir["#{repo_path}/commits/weeklies/*.json"].each do |file|
      json = File.open(file) { |f| JSON.load(f) }
      v = Vulnerability.find_by(cve: cve_from_filename(file))
      if v.nil?
        puts "WARNING: weekly report for #{file}, but vuln not found"
      else
        json.each do |_week, report|
          events << overall_report_event(v, report)
        end
      end
    end
    puts "Importing..."
    Event.import events.compact
  end

  # Always create an event for a week with commits
  def overall_report_event(v, report)
    churn = report['insertions'].to_i + report['deletions'].to_i
    num_devs = report['developers'].size
    nice_date = DateTime.parse(report['date']).strftime('%A, %B %d, %Y')
    Event.new(
      detail_id: v.id,
      detail_type: v.class,
      style: style,
      title_template: "#{report['commits']} commits by #{num_devs} developers, " +
                      "#{churn} lines changed",
      description_template: <<~EOS ,
        During the 7-day period starting on #{nice_date}, the code that was
        impacted by this vulnerability had #{report['commits']} commits by
        #{num_devs}.

        Those changes involved #{report['insertions']} line(s) inserted
        and #{report['deletions']} line(s) deleted, impacting a total of
        #{report['files'].size} source code file(s). The impacted files were:

        #{report['files'].map { |f| " * `" + f + '`'  }.join("\n") }
      EOS
      date_template: report['date']
    )
  end

  def style
    @style ||= Style.find_or_create_by!(
      name: 'vulnerability',
      icon: 'bug_report',
      color: '#F07866',
    )
  end

end
