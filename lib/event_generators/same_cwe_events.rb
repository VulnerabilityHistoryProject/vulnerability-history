require_relative '../../app/helpers/application_helper'
require 'timing_logger'

class SameCweEvents
  include ApplicationHelper

  def initialize(project, log = TimingLogger.new(STDOUT, 'data:events:same_cwe'))
    @project = project
    @logger = log
  end

  def generate
    events = []
    query = <<~EOSQL
    WITH same_cwe_events AS (
      SELECT vt1.vulnerability_id AS vuln1_id,
               vt2.vulnerability_id AS vuln2_id,
               v2.announced AS announced,
           v2.cve AS cve,
               t1.name AS cwe,
               t1.shortname AS tag_shortname
        FROM vulnerability_tags AS vt1
          INNER JOIN vulnerability_tags AS vt2 ON (vt1.tag_id = vt2.tag_id AND vt1.id <> vt2.id)
          INNER JOIN vulnerabilities AS v2 ON (vt2.vulnerability_id = v2.id)
          INNER JOIN tags AS t1 ON (t1.id = vt1.tag_id)
          WHERE t1.name LIKE 'CWE%'
          AND v2.project_id = '#{@project.id}'
    ), templates AS ( SELECT
      'Another :CWE_NAME: vulnerability announced' AS title,
      ':CVE: was reported, which is the same type of vulnerability as this one. They are both *:CWE_NAME:*.

       See other cases of [:tags: :CWE_NAME:](/tags/:CWE_SLUG:).' AS description
    )

    INSERT INTO events(event_type, title, date, description, icon, color,
                       start_hidden, vulnerability_id)
      SELECT 'same_cwe'  AS event_type,
        REPLACE(templates.title, ':CWE_NAME:', cwe)     AS title,
        announced    AS date,
        REPLACE(REPLACE(REPLACE(
          templates.description, ':CVE:', cve),
          ':CWE_NAME:',cwe),
          ':CWE_SLUG:', tag_shortname) AS description,
        'bug_report' AS icon,
        '#BB55FF'    AS color,
        false        AS start_hidden,
        vuln1_id     AS vulnerability_id
      FROM same_cwe_events, templates
    EOSQL
    @logger.info 'Execute SQL bulk insert query'
    results = ActiveRecord::Base.connection.execute(query)
  end

  def normalized_cwe_string(cwe)
    cwe.to_s.gsub(/[^0-9]/,'').to_i
  end

end
