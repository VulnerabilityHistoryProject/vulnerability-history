class VulnerabilityLoader
  def load_data(repo_path, project)
    Dir["#{repo_path}/cves/*.yml"].each do |file|
      begin
        yml = File.open(file) { |f| YAML.load(f) }
        v   = create_vulnerability(yml, project)
        create_fixes(v, yml) unless v.nil?
        create_vccs(v, yml) unless v.nil?
        # create_interesting_commits(v, yml)
      rescue => e
        $stderr.puts "Error loading vuln file #{file}. Cause: #{e.full_message}"
      end
    end
  end

  def create_vulnerability(yml, project)
    if yml["announced"].nil?
      puts "ANNOUNCED DATE MISSING for #{yml['CVE']} in #{project.name}"
    else
      Vulnerability.create!(
        cve: yml["CVE"],
        announced: yml["announced"],
        description: yml["description"].to_s,
        upvotes: yml["upvotes"].to_i,
        nickname: yml["nickname"].to_s,
        project: project,
        notes: yml,
      )
    end
  end

  def create_fixes(v, yml)
    yml['fixes']&.each do | entry |
      hash = entry['commit'] || entry[:commit]
      commit = Commit.find_by(commit_hash: hash)
      if commit.nil?
        # puts "WARNING: Missing commit data for #{hash}. Fix not created."
      else
        Fix.create!(
          vulnerability: v,
          commit: commit,
          notes: commit.notes.merge( { note: entry['note'] } )
        )
      end
    end
  end

  def create_vccs(v, yml)
    yml['vccs']&.each do | entry |
      hash = entry['commit'] || entry[:commit]
      commit = Commit.find_by(commit_hash: hash)
      if commit.nil?
        # puts "WARNING: Missing commit data for #{hash}. Fix not created."
      else
        Vcc.create!(
          vulnerability: v,
          commit: commit,
          notes: commit.notes.merge( { note: entry['note'] } )
        )
      end
    end
  end

  def create_interesting_commits(v, yml)
    yml['interesting_commits']['commits']&.each do | entry |
      hash = entry['commit'] || entry[:commit]
      commit = Commit.find_by(commit_hash: hash)
      if commit.nil?
        # puts "WARNING: Missing commit data for #{hash}. Fix not created."
      else
        InterestingCommit.create!(
            vulnerability: v,
            commit: commit,
            note: entry['note'],
        )
      end
    end
  end

end
