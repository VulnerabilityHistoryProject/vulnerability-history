class ArticleLoader
  def load_data(repo_path)
    Dir["#{repo_path}/articles/*.md"].each do |file|
      md = File.open(file) { |f| YAML.load(f) }

      cves = Array.new
      if md['cve'].is_a?(Enumerable)
        md['cve'].each { |cve| cves.push(Vulnerability.find_by(cve: cve).id) }
      elsif not md['cve'].nil?
        puts "ARTICLES: cannot parse cve etnry in #{file}"
      end

      tags = Array.new
      if md['tag'].is_a?(Enumerable)
        md['tag'].each { |tag| tags.push(Tag.find_by(shortname: tag).id) }
      elsif not md['tag'].nil?
        puts "ARTICLES: cannot parse tag entry in #{file}"
      end

      filepaths = Array.new
      if md['filepath'].is_a?(Enumerable)
        md['filepath'].each { |f| filepaths.push(Filepath.find_by(filepath: f).id) }
      elsif not md['filepath'].nil?
        puts "ARTICLES: cannot parse filepath entry in #{file}"
      end

      if md['title'].nil? or md['art'].nil?
        puts "INVALID ARTICLE: title or art is missing."
      else
        Article.create!(
          title: md['title'],
          art: md['art'],
          blurb: md['blurb'] || "blurb",
          fulltext: md, #TODO: get the actual fulltext, directly below the front matter
        )
        # I need a way to create a single ArticleRelation for each cve, tag, and filepath.
        # I might need to do something different than an ArticleRelation.
        # Compare to lib/taggers/bounty_tagger.rb
        ArticleRelation.create!(
          vulnerability: cves,
          tag: tags,
          filepath: filepaths,
        )
      end
    end
  end
end
