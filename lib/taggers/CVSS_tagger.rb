require_relative '../writing'

class CVSSTagger

  def initialize(project)
    @project = project

    @codes_to_names = {
      'AV:N' => 'Attack Vector - Network',
      'AV:A' => 'Attack Vector - Adjacent Network',
      'AV:L' => 'Attack Vector - Local',
      'AV:P' => 'Attack Vector - Physical',
      'AC:L' => 'Attack Complexity - Low',
      'AC:M' => 'Attack Complexity - Medium',
      'AC:H' => 'Attack Complexity - High',
      'Au:M' => 'Privileges Required - High',
      'PR:H' => 'Privileges Required - High',
      'Au:S' => 'Privileges Required - Low',
      'PR:L' => 'Privileges Required - Low',
      'Au:N' => 'Privileges Required - None',
      'PR:N' => 'Privileges Required - None',
      'UI:R' => 'User Interaction - Required',
      'UI:N' => 'User Interaction - None',
      'S:C' => 'Scope - Changed',
      'S:U' => 'Scope - Unchanged',
      'C:C' => 'Confidentiality Impact - Complete',
      'C:H' => 'Confidentiality Impact - High',
      'C:P' => 'Confidentiality Impact - Partial',
      'C:L' => 'Confidentiality Impact - Low',
      'I:C' => 'Integrity Impact - Complete',
      'I:H' => 'Integrity Impact - High',
      'I:P' => 'Integrity Impact - Partial',
      'I:L' => 'Integrity Impact - Low',
      'A:C' => 'Availability Impact - Complete',
      'A:H' => 'Availability Impact - High',
      'A:P' => 'Availability Impact - Partial',
      'A:L' => 'Availability Impact - Low',
    }

    @all_tags = Hash.new
    @codes_to_names.each do |code, fullname|
      fields = fullname.split(' - ')
      @all_tags[code] = {
        name: "Severity: #{fullname}",
        shortname: shortname(code),
        color: '#99ccff',
        description: Writing.tag_article(shortname(code))
      }
    end
  end

  def shortname(code)
    "cvss-#{code.parameterize}"
  end

  def create_tags
    @cvss_tags = Hash.new
    Vulnerability.where(project: @project).each do |v|
      if v.notes.dig("CVSS") != nil
        cvss = v.notes.dig('CVSS')
        fields = cvss.split('/')
        for field in fields
          if @all_tags.has_key?(field)
            t = Tag.find_or_create_by!(@all_tags[field])
            @cvss_tags[field] = t
          end
        end
      end
    end
  end

  def apply_tags
    vuln_tags = []
    Vulnerability.where(project: @project).each do |v|
      if v.notes.dig("CVSS") != nil
        fields = v.notes.dig("CVSS").split('/')
        for field in fields
          t = @cvss_tags[field]
          vuln_tags << VulnerabilityTag.new(
            vulnerability: v,
            tag: t,
            note: ''
          )
        end
      end
    end
    VulnerabilityTag.import vuln_tags
  end

end
