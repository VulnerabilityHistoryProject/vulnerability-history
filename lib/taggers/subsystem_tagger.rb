require_relative '../writing'
class SubsystemTagger

  def create_tags
    Vulnerability.all.each do |v|
      name = normalized v.notes.dig('subsystem', 'name')
      unless name.empty?
        @tag = Tag.find_by(shortname: shortname(name))
        if not @tag
          @tag = Tag.create!(
              name: "Subsystem: #{name}",
              shortname: shortname(name),
              color: '#6aa5e5',
              icon: 'cogs',
              description: <<~EOS
                #{Writing.tag_article(shortname(name), false)}

                #{Writing.tag_article('subsystem')}
              EOS
          )
        end
      end
    end
  end

  def apply_tags
    Vulnerability.all.each do |v|
      name = normalized v.notes.dig('subsystem', 'name')
      unless name.empty?
        t = Tag.find_by(shortname: shortname(name))
        n = v.notes.dig('subsystem', 'answer').to_s
        VulnerabilityTag.create!(vulnerability: v, tag: t, note: n)
      end
    end
  end

  def normalized(name)
    name.to_s.downcase.strip
  end

  def shortname(name)
    "subsystem-#{normalized(name)}"
  end
end
