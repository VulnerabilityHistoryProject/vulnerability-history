class DiscoveryTagger

  def create_tags
    @automated_tag = Tag.find_by(shortname: 'automated')
    if not @automated_tag
      @automated_tag = Tag.create!(
          name: 'Discovered Automatically',
          shortname: 'automated',
          color: '#99ccff',
          description: <<~EOS
        These are vulnerabilities that were discovered using automation.
        This could be an automated test like a unit test or an automated test case generator such as a fuzz tester.
      EOS
      )
    end

    @manual_tag = Tag.find_by(shortname: 'manual')
    if not @manual_tag
      @manual_tag = Tag.create!(
          name: 'Discovered Manually',
          shortname: 'manual',
          color: '#ff8080',
          description: <<~EOS
        These are vulnerabilities that were discovered manually, as opposed to using an automated tool.
      EOS
      )
    end

    @internal_tag = Tag.find_by(shortname: 'internal')
    if not @internal_tag
      @internal_tag = Tag.create!(
          name: 'Discovered Internally',
          shortname: 'internal',
          color: '#cccccc',
          description: <<~EOS
        These are vulnerabilities that were discovered internally by Google.
        This determination is typically made by looking at the email address of the developer who discovered it in the bug report or other supporting material.
      EOS
      )
    end

    @external_tag = Tag.find_by(shortname: 'external')
    if not @external_tag
      @external_tag = Tag.create!(
          name: 'Discovered Externally',
          shortname: 'external',
          color: '#cccccc',
          description: <<~EOS
        These are vulnerabilities that were not discovered by Google.
        This determination is typically made by looking at the email address of the developer who discovered it in the bug report or other supporting material.
      EOS
      )
    end

    @contest_tag = Tag.find_by(shortname: 'contest')
    if not @contest_tag
      @contest_tag = Tag.create!(
          name: 'Discovered in Contest',
          shortname: 'contest',
          color: '#cccccc',
          description: <<~EOS
        These are vulnerabilities that were discovered in a contest or hackathon, such as Pwn2Own.
      EOS
      )
    end
  end

  def apply_tags
    Vulnerability.all.each do |v|
      findTags(v)
      @tags.each do |t|
        VulnerabilityTag.create!(
                            vulnerability: v,
                            tag: t,
                            note: <<~EOS
                              #{v.notes.dig('discovered', 'answer').to_s.sub!("\n", ' ')}
                            EOS
        )
      end
    end
  end

  def findTags(v)
    @tags = []
    if v.notes.dig('discovered', 'automated') == true
      @tags << @automated_tag
    end
    if v.notes.dig('discovered', 'automated') == false
      @tags << @manual_tag
    end
    if v.notes.dig('discovered', 'google') == true
       @tags << @internal_tag
    end
    if v.notes.dig('discovered', 'google') == false
      @tags << @external_tag
    end
    if v.notes.dig('discovered', 'contest') == true
      @tags << @contest_tag
    end
  end

end
