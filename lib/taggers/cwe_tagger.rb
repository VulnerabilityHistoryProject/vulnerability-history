require 'csv'

class CWETagger

  def initialize
    @logger = TimingLogger.new(STDOUT, 'data:tag:cwe')
    @cwe_db = {}
    @tag_cache = {}
    # This data comes from the CWE database - see repo's README for updating
    CSV.foreach(Rails.root + "lib/taggers/resources/cwes.csv") do |fields|
      shortname = cwe_shortname(fields[0])
      @cwe_db[fields[0].to_i] = {
        name: "CWE-#{fields[0]}: #{fields[1]}",
        shortname: shortname,
        color: '#99ccff',
        description: <<~EOS
          "#{fields[4]}"  - Entry from the Common Weakness Enumeration

          For more info visit <a href="https://cwe.mitre.org/data/definitions/#{fields[0]}.html" target="_blank" rel="noopener noreferrer">CWE-#{fields[0]}</a>
          EOS
        family: 'cwe'
      }
    end
    CSV.foreach(Rails.root + "lib/taggers/resources/manual_cwes.csv") do |fields|
      shortname = cwe_shortname(fields[0])
      @cwe_db[fields[0].to_i] = {
        name: "CWE-#{fields[0]}: #{fields[1]}",
        shortname: shortname,
        color: '#99ccff',
        description: <<~EOS
          "#{fields[2]}" - Entry from the Common Weakness Enumeration

          For more info visit <a href="https://cwe.mitre.org/data/definitions/#{fields[0]}.html" target="_blank" rel="noopener noreferrer">CWE-#{fields[0]}</a>
          EOS
        family: 'cwe'
      }
    end
  end

  def create_tags
    # Collect all tags from all project's vulnerabilities
    # This way, we only have CWE tags for which there's a vulnerability for it
    cwes = Vulnerability.select("DISTINCT notes->'CWE' AS cwes")
                        .map {|rs| rs.cwes }
                        .flatten # handle arrays of CWEs
                        .compact # remove nil
    cwes.each do |raw_cwe|
      cwe = cwe_integer(raw_cwe)
      shortname = cwe_shortname(raw_cwe)
      if @cwe_db.key? cwe
        t = Tag.find_by(shortname: shortname) || Tag.create!(@cwe_db[cwe])
        @tag_cache[cwe] = t;
      end
    end
  end

  def apply_tags
    vuln_tags = []
    Vulnerability.all.each do |v|
      Array(v.notes['CWE']).each do |cwe_item|
        cwe_id = cwe_integer(cwe_item)
        if @cwe_db.key? cwe_id
          vuln_tags << VulnerabilityTag.new(
            vulnerability: v,
            tag: @tag_cache[cwe_id],
            importance: importance,
            note: v.notes['CWE_note'].to_s
          )
        else
          unless [17].include? cwe_id # deprecated CWE entries - ok to skip
            @logger.warn "WARNING: CWE entry not found for: #{cwe_id} in #{v.cve}"
          end
        end
      end
    end
    VulnerabilityTag.import vuln_tags
  end

  # If people entered in text here, just take the number
  # e.g. CWE-122 ==> 122
  def cwe_integer(cwe)
    cwe.to_s.gsub(/[^0-9]/,'').to_i
  end

  def cwe_shortname(str)
    "cwe-#{cwe_integer(str)}"
  end


  def importance
    1.0 # CWE should always come first in the tag sort order if we have it
  end

end
