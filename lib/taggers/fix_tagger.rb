class FixTagger

  def create_tags
    @Big_Fix_Tag = Tag.create!(
      name: 'Fix: Big',
      shortname: 'Big Fix',
      color: '#9FE69F',
      description: "The fix for this vulnerability has more than 100 lines of changed code."
    )
    @Small_Fix_Tag = Tag.create!(
      name: 'Fix: Small',
      shortname: 'Small Fix',
      color: '#9FE69F',
      description: "The fix for this vulnerability has less than 20 lines of changed code."
    )
  end

  def apply_tags
    tags = []
    query = "SELECT vulnerabilities.id FROM commit_filepaths
              INNER JOIN fixes ON commit_filepaths.commit_id = fixes.commit_id
              INNER JOIN vulnerabilities ON fixes.vulnerability_id = vulnerabilities.id
              GROUP BY vulnerabilities.id
              HAVING SUM(total_churn) > 100;"
    results = ActiveRecord::Base.connection.execute(query)

    results.each do |v|
      t = VulnerabilityTag.new(
        vulnerability_id: v['id'],
        tag: @Big_Fix_Tag
      )
      tags << t
    end

    query = "SELECT vulnerabilities.id FROM commit_filepaths
              INNER JOIN fixes ON commit_filepaths.commit_id = fixes.commit_id
              INNER JOIN vulnerabilities ON fixes.vulnerability_id = vulnerabilities.id
              GROUP BY vulnerabilities.id
              HAVING SUM(total_churn) < 20;"
    results = ActiveRecord::Base.connection.execute(query)

    results.each do |v|
      t = VulnerabilityTag.new(
        vulnerability_id: v['id'],
        tag: @Small_Fix_Tag
      )
      tags << t
    end

    VulnerabilityTag.import tags
  end
end
