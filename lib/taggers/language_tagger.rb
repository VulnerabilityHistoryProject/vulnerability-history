require 'set'
class LanguageTagger
  def create_tags
    @c_tag = Tag.find_by(shortname: 'C')
    if not @c_tag
      @c_tag = Tag.create!(
          name: 'C Language',
          shortname: 'C',
          color: '#890808',
          description: <<~EOS
        This vulnerable code was writen in C
      EOS
      )
    end

    @cpp_tag = Tag.find_by(shortname: 'C++')
    if not @cpp_tag
      @cpp_tag = Tag.create!(
          name: 'C++ Language',
          shortname: 'C++',
          color: '#890808',
          description: <<~EOS
        This vulnerable code was writen in C++
      EOS
      )
    end

    @js_tag = Tag.find_by(shortname: 'Javascript')
    if not @js_tag
      @js_tag = Tag.create!(
          name: 'Javascript Language',
          shortname: 'js',
          color: '#890808',
          description: <<~EOS
        This vulnerable code was writen in Javascript
      EOS
      )
    end

    @java_tag = Tag.find_by(shortname: 'Java')
    if not @java_tag
      @java_tag = Tag.create!(
          name: 'Java Language',
          shortname: 'Java',
          color: '#890808',
          description: <<~EOS
        This vulnerable code was writen in Java
      EOS
      )
    end

    @py_tag = Tag.find_by(shortname: 'Python')
    if not @py_tag
      @py_tag = Tag.create!(
          name: 'Python Language',
          shortname: 'Python',
          color: '#890808',
          description: <<~EOS
        This vulnerable code was writen in Python
      EOS
      )
    end
  end

  def apply_tags
    Vulnerability.all.each do |v|
      findTags(v)
      @tags.each do |t|
        if t
          VulnerabilityTag.create!(
                              vulnerability: v,
                              tag: t
          )
        end
      end
    end
  end

  def findTags(v)
    @tags = Set[]
    @vulnerable_files = Filepath.vulnerable(v)
    @vulnerable_files.each do |vf|
      fields = vf.filepath.split('.')
      extension = fields[-1]
      if (extension == 'c')
        @tags << @c_tag
      elsif (extension == 'cc' or extension == 'cpp')
        @tags << @cpp_tag
      elsif (extension == 'java')
        @tags << @java_tag
      elsif (extension == 'js')
        @tags << @js_tag
      elsif (extension == 'py')
        @tags << @py_tag
      end
    end
  end
end
