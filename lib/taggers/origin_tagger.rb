require 'yaml'
require_relative '../writing'

class OriginTagger

  def initialize(project)
    @project = project
  end

  def create_tags
    @Origin_tag = Tag.find_or_create_by!(
      name: 'Origin Vulnerability',
      shortname: 'Origin',
      color: '#d845e0',
      icon: 'origin',
      description: Writing.tag_article('origin')
    )
  end

  def make_where(commits)
    where = "commit_hash in ("
    commits.each do |commit|
      where += "'#{commit}',"
    end
    where = where[0...-1]
    return where + ')'
  end

  def apply_tags(repo_path)
    tags = []
    commits = []
    y = File.open("#{repo_path}/commits/origin_commits.yml") { |f| YAML.load(f) }
    y.each do |commit|
      commits << commit["commit"]
    end
    unless commits.empty?
      vulns = Vulnerability
                .joins([:project, vccs: :commit])
                .where(project: @project)
                .where(make_where(commits))
      vulns.each do |v|
        t = VulnerabilityTag.new(
          vulnerability: v,
          importance: 0.25, # somewhat important
          tag: @Origin_tag
        )
        tags << t
      end
      VulnerabilityTag.import tags
    end
  end
end
