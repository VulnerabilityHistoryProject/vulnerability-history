class UnitTestTagger
  def create_tags

    @escaped_tag = Tag.create!(
      name: 'Escaped Test',
      shortname: 'escaped',
      color: '#99ccff',
      description: <<~EOS
        This tag is applied to all vulnerabilities that had existing unit tests covering the vulnerable code.
      EOS
    )

    @lacked_tag = Tag.create!(
        name: 'Lacked Test',
        shortname: 'lacked',
        color: '#ff8080',
        description: <<~EOS
        This tag is applied to all vulnerabilities that lacked unit tests covering the vulnerable code.
    EOS
    )

    @untested_tag = Tag.create!(
        name: 'Fix Unteseted',
        shortname: 'untested',
        color: '#cccccc',
        description: <<~EOS
        This tag is applied to all vulnerabilities where the fix for the vulnerability involves adding or improving an automated test to ensure it is not repeated.
    EOS
    )

  end

  def apply_tags
    Vulnerability.all.each do |v|
      if escaped_test?(v)
        VulnerabilityTag.create!(
            vulnerability: v,
            tag: @escaped_tag,
            note: <<~EOS
              #{v.notes.dig('unit_tested', 'answer').to_s.sub!("\n", ' ')}
            EOS
        )
      end
      if lacked_test?(v)
        VulnerabilityTag.create!(
            vulnerability: v,
            tag: @escaped_tag,
            note: <<~EOS
              #{v.notes.dig('unit_tested', 'answer').to_s.sub("\n", ' ')}
            EOS
        )
      end
      if untested?(v)
        VulnerabilityTag.create!(
            vulnerability: v,
            tag: @untested_tag,
            note: <<~EOS
              #{v.notes.dig('unit_tested', 'answer').to_s.sub("\n", ' ')}
            EOS
        )
      end
    end
  end

  def escaped_test?(v)
    v.notes.dig('unit_tested', 'code') == true
  end

  def lacked_test?(v)
    v.notes.dig('unit_tested', 'code') == false
  end

  def untested?(v)
    v.notes.dig('unit_tested', 'fix') == true
  end

end

=begin
If code: true then tag it with escaped tests
If code: false then tag it with lacked tests
If fix: true then tag it with fix untested
=end