require 'lda-ruby'
require_relative '../writing'
class LDATopicTagger

  def initialize(project)
    @project = project

    # lda-ruby will apply a built-in stop word list if we don't provide one
    stop_word_list = nil
    @corpus = Lda::Corpus.new(stop_word_list)
  end

  def build_corpus(text_source)
    query = "SELECT id,
                    description,
                    notes->'mistakes'->>'answer' AS mistakes
             FROM vulnerabilities
             WHERE project_id = '#{@project.id}';"
    results = ActiveRecord::Base.connection.execute(query)

    # create a document for each vulnerability and add it to the corpus
    results.each do |r|
      mistakes_made = "#{r'mistakes']}"
      description = "#{r'description']}"

      if text_source == "mistakes"
        text = mistakes_made
      elsif text_source == "description"
	text = description
      elsif text_source == "all"
	text = mistakes + " " + description
      end

      # replace newlines with a space
      text = text.gsub(/\n/, " ")
      # replace sequences of multiple space characters with a single space
      text = text.gsub(/\s+/, " ")

      @document = Lda::TextDocument.new(@corpus, text)
      @corpus.add_document(@document)
    end
  end

  def do_topic_modeling
    @lda = Lda::Lda.new(@corpus)
    @lda.verbose = false

    # these are hyperparameters we need to tune; defaults provided below
    @lda.convergence = 1e-6
    @lda.em_convergence = 1e-4
    @lda.em_max_iter = 100
    @lda.est_alpha = 1
    @lda.init_alpha = 0.3
    @lda.max_iter = 20
    @lda.num_topics = 2

    # run EM algorithm using random starting points
    @lda.em('random')

    # return a list of the top N words for each topic
    topics = @lda.top_words(10)
    puts topics

    # From lda-ruby:
    #   Compute the average log probability for each topic for each document
    #   in the corpus. This method returns a matrix:  num_docs x num_topics
    #   with the average log probability for the topic in the document.
    topic_doc_probs = @lda.compute_topic_document_probability

    #TODO: add topics to database
  end
end
