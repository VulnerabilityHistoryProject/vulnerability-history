desc "This task is called by the Heroku scheduler add-on. It also will download a git repo to a directory. Put in lib/tasks"
require 'git'
require 'find'
require 'yaml'

gitAddress = 'https://github.com/andymeneely/chromium-vulnerabilities.git'
gitName = 'chromium-vulnerabilities'
task :cloneGit => :environment do
  g = Git.clone(gitAddress, gitName, :path => './tmp/checkout')
  findAddress = "./tmp/checkout/" + gitName
  ymlFiles = []
  parsed = []
  Find.find(findAddress) do |path|
    ymlFiles << path if path=~ /.*\.yml$/
  end
  for name in ymlFiles
    parsedItem = begin
      YAML.load(File.open(name))
    rescue ArgumentError => e
      puts "Could not parse YAML: #{e.message}"
    end
    parsed.push(parsedItem)
  end

  parsed.each do |parsedToSave|
    if (parsedToSave.keys[0] == "releases")
      parsedToSave["releases"].each do |key, date|
        releases = Release.new
        releases.number = key
        releases.date = date
        releases.project = "Chromium"
        releases.save
      end
    else
      cve = parsedToSave.keys[0]
      #vulnerabilities table
      vulnerabilities = Vulnerability.new
      vulnerabilities.CVE = cve
      vulnerabilities.bounty = parsedToSave[cve]["bounty"]
      vulnerabilities.announced = parsedToSave[cve]["announced"]["date"]
      vulnerabilities.url = parsedToSave[cve]["announced"]["url"]
      vulnerabilities.code_reviews = parsedToSave[cve]["code_reviews"]
      vulnerabilities.bugs = parsedToSave[cve]["bugs"]
      vulnerabilities.save

      #Fixes Table
      fixesArray = parsedToSave[cve]["fixes"]
      fixesArray.each do |fix|
        fixes = Fix.new
        fixes.vulnerability_name = cve
        fixes.fix_num = fix
        fixes.save
      end
      arrayFiles = parsedToSave[cve]["files"].keys
      #for every file look at vccs
      #Source File
      arrayFiles.each do |fileArray|
        source_files = Filepath.new
        source_files.vulnerability_name = cve
        source_files.filepath = fileArray
        source_files.note = parsedToSave[cve]["files"][fileArray]["note"]
        source_files.save

         #vccs
        arrayVccs = parsedToSave[cve]["files"][fileArray]["vccs"]
        unless arrayVccs.nil?
          arrayVccs.each do |vccsArray|
            vccs = Vcc.new
            vccs.vulnerability_name = cve
            vccs.file_name = fileArray
            key = vccsArray.keys[0]
            vccs.commit_hash = key
            vccs.note =  vccsArray[key]["note"]
            vccs.save
          end
        end
      end
    end
  end
end
