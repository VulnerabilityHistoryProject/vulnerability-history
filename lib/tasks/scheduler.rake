desc "This task is called by the Heroku scheduler add-on. It also will download a git repo to a directory. Put in lib/tasks"
require 'git'
require 'find'
require 'yaml'
task :cloneGit => :environment do
g = Git.clone('https://github.com/andymeneely/chromium-vulnerabilities.git', 'chromium-vulnerabilities', :path => './tmp/checkout')
    ymlFiles = []
    parsed = []
    Find.find('./tmp/checkout/chromium-vulnerabilities/') do |path|
        ymlFiles << path if path=~ /.*\.yml$/
    end
    puts ymlFiles
    for name in ymlFiles
        parsedItem = begin
            YAML.load(File.open(name))
        rescue ArgumentError => e
            puts "Could not parse YAML: #{e.message}"
        end
        #puts parsedItem
        parsed.push(parsedItem)
    end
     parsed.each do |parsedToSave|
         if (parsedToSave.keys[0] == "releases")
             parsedToSave["releases"].each do |key, date|
                 releases = Release.new
                 releases.number = key
                 releases.date = date
                 releases.project = "Chromium"
                 #releases.save
            end
             
         else
            cve = parsedToSave.keys[0]
            vulnerabilities = Vulnerability.new
            vulnerabilities.CVE = cve
            vulnerabilities.bounty = parsedToSave[cve]["bounty"]
            vulnerabilities.announced = parsedToSave[cve]["announced"]["date"]
            vulnerabilities.url = parsedToSave[cve]["announced"]["url"]
            vulnerabilities.code_reviews = parsedToSave[cve]["code_reviews"]
            vulnerabilities.bugs = parsedToSave[cve]["bugs"]
            vulnerabilities.fixes = parsedToSave[cve]["fixes"]
             array = parsedToSave[cve]["files"].keys
             puts array
             vulnerabilities.files = Array.new.push("hello")
             #["webkit/port/DerivedSources.make"]
             #puts parsedToSave[cve]["files"][files]["vccs"].size()
            vulnerabilities.files = cve
            vulnerabilities.save
         end
    end
    #rails db:setup
    
end