require 'git'
require 'yaml'
require 'fileutils'
require 'timing_logger'

logger = TimingLogger.new(STDOUT, 'data:writing')

namespace :data do

  desc 'Pull latest vhp-writing repo'
  task :writing => [
    'environment',
    'data:writing:github_clone',
    'data:writing:load',
  ]

  namespace :writing do
    repo_name = 'vhp-writing'
    tmp_dir = "./tmp/checkout/" + repo_name
    git_branch = 'master'

    desc 'Perform github clone of vhp-writing'
    task :github_clone do
      logger.info "Removing git #{tmp_dir}..."
      FileUtils.rm_rf tmp_dir if (File.exist?(tmp_dir))
      logger.info "Cloning repo from GitHub on #{git_branch}..."
      g = Git.clone('git://github.com/VulnerabilityHistoryProject/vhp-writing.git',
                    repo_name,
                    path: './tmp/checkout',
                    branch: git_branch)
      logger.info "Loaded data version: #{g.object('HEAD').sha}"
    end

    desc 'Load data like articles from vhp-writing'
    task :load => :environment do
      [
        ArticleLoader,
      ].each do |loader|
        logger.info "Running #{loader}..."
        loader.new.load_data(tmp_dir)
      end
    end

    desc 'Clear all vhp-writing tables. Be CAREFUL!!'
    task :clear => :environment do
      logger.info "Clearing vhp-writing data..."
      ActiveRecord::Base.connection.execute "TRUNCATE article_filepaths RESTART IDENTITY"
      ActiveRecord::Base.connection.execute "TRUNCATE article_tags RESTART IDENTITY"
      ActiveRecord::Base.connection.execute "TRUNCATE article_vulnerabilities RESTART IDENTITY"
      ActiveRecord::Base.connection.execute "TRUNCATE articles RESTART IDENTITY"
    end
  end
end
