require 'timing_logger'

logger = TimingLogger.new(STDOUT, 'data')

desc 'Clear the database. Be CAREFUL!!'
namespace 'data' do
  task :clear => :environment do
    logger.info 'Clearing data'
    ActiveRecord::Base.connection.execute "TRUNCATE article_filepaths RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE article_tags RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE article_vulnerabilities RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE articles RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE commit_filepaths RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE commits RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE developers RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE events RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE filepaths RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE fixes RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE projects RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE releases RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE tags RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE vccs RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE vulnerabilities RESTART IDENTITY"
    ActiveRecord::Base.connection.execute "TRUNCATE vulnerability_tags RESTART IDENTITY"
  end

  desc 'Clear the cache'
  task :clear_cache => :environment do
    logger.info 'Clearing entire cache'
    Rails.cache.clear
  end
end
