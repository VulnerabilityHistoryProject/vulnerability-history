require 'data_builder'

project_shortnames = %w(
  chromium
  httpd
  struts
  tomcat
  django
  ffmpeg
  systemd
)

namespace :data do
  desc 'Build all *-vulnerabilities data'
  task_names = project_shortnames.map { |p| "data:#{p}" }
  task 'all' => task_names
end

project_shortnames.each do |p|
  builder = DataBuilder.new(p)
  desc "Build all of #{project_shortnames}-vulnerabilities"
    task "data:#{p}" => [
      'environment',
      'data:no_logger',
      "data:#{p}:check_exist",
      "data:#{p}:github_clone",
      "data:#{p}:load",
      "data:#{p}:tags",
      "data:#{p}:events",
      "data:optimize",
      "data:clear_cache"
    ]
  namespace :data do
    namespace p do
      desc "Re-load #{p}-vulnerabilities... but skip cloning from GitHub."
      task :nogit => [
          'environment',
          'data:no_logger',
          "data:#{p}:check_exist",
          "data:#{p}:load",
          "data:#{p}:tags",
          "data:#{p}:events",
          "data:optimize",
          "data:clear_cache"
      ]

      desc "Check if data has already been loaded."
      task :check_exist => :environment do
        builder.check_exist
      end

      desc "Pull vulnerabilities repo from GitHub."
      task :github_clone => :environment do
        builder.clone_git_repo
      end

      desc "Load base data into db."
      task :load => :environment do
        builder.load_data
      end

      desc "Generate event models."
      task :events => :environment do
        builder.generate_events
      end

      desc "Generate and apply tags."
      task :tags => :environment do
        builder.generate_tags
      end

      desc "Load only YMLS (for merging and testing PRs efficiently)"
      task :load_vulns_only => ['environment', 'data:chromium:github_clone'] do
        builder.load_vulns_only
      end
    end
  end
end
