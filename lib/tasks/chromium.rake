require 'git'
require 'yaml'
require 'fileutils'
require 'event_generators/bounty_events'
require 'event_generators/commit_events'
require 'event_generators/fix_events'
require 'event_generators/release_events'
require 'event_generators/vcc_events'
require 'event_generators/vulnerability_events'
require 'loaders/release_loader'
require 'loaders/vulnerability_loader'
require_relative 'scheduler_task_handler'


desc 'Clean rebuild of Chromium data.'
namespace :data do
  task :chromium => [
    'environment',
    'data:clear',
    'data:chromium:github_clone',
    'data:chromium:load',
    'data:chromium:events',
  ]

  namespace :chromium do
    gitName = 'chromium-vulnerabilities'
    findAddress = "./tmp/checkout/" + gitName
    gitAddress = 'https://github.com/andymeneely/chromium-vulnerabilities.git'
    gitBranch = 'dev'
    customEvent = "bounty"
    projectName = 'Chromium'

    desc 'Re-load, but skip cloning from GitHub'
    task :nogit => [
      'environment',
      'data:clear',
      'data:chromium:load',
      'data:chromium:events',
    ]

    desc 'Pull data from GitHub'
    task :github_clone do
      Scheduler_Task_Handler.cloneGitRepo(findAddress, gitAddress, gitName, gitBranch)
    end

    desc 'Load base data into db'
    task :load do
      git_logs, ymlFiles, release_ymls = Scheduler_Task_Handler.
        yamlGitLogHandling(findAddress)
      Scheduler_Task_Handler.gitParsing(git_logs)
      [
        ReleaseLoader,
        VulnerabilityLoader,
      ].each do |loader|
        puts "Running #{loader}..."
        loader.new.load_data(findAddress)
      end
    end

    desc 'Generate event models'
    task :events do
      [
        VulnerabilityEvents,
        FixEvents,
        VccEvents,
        ReleaseEvents,
        CommitEvents,
        BountyEvents,
      ].each do |generator|
        puts "Generating #{generator.to_s.tableize.humanize.downcase}"
        generator.new.generate
      end
    end
  end

end
