def vulnerabilityData(parsed)
  cve = parsed.keys[0]
  #vulnerabilities table
  vulnerabilities = Vulnerability.new
  vulnerabilities.CVE = cve
  vulnerabilities.bounty = parsed[cve]["bounty"]
  vulnerabilities.announced = parsed[cve]["announced"]["date"]
  vulnerabilities.url = parsed[cve]["announced"]["url"]
  vulnerabilities.code_reviews = parsed[cve]["code_reviews"]
  vulnerabilities.bugs = parsed[cve]["bugs"]
  vulnerabilities.save
end
def fixesData(parsed)
  #The Fixes and it's data'
  cve = parsed.keys[0]
  fixesArray = parsed[cve]["fixes"]
  fixesArray.each do |fix|
    fixes = Fix.new
    fixes.vulnerability_name = cve
    fixes.fix_num = fix
    fixes.save
  end
end
def fileData(parsed)
  cve = parsed.keys[0]
  arrayFiles = parsed[cve]["files"].keys
  #for every file look at vccs
  arrayFiles.each do |fileArray|
    filepath = Filepath.new
    filepath.filepath = fileArray
    if parsed[cve]["files"][fileArray]["note"]
      filepath.note = parsed[cve]["files"][fileArray]["note"]
    end
    filepath.save
    vccsData(parsed, fileArray)
  end
end

def vccsData(parsed, fileArray)
  cve = parsed.keys[0]
  arrayVccs = parsed[cve]["files"][fileArray]["vccs"]
    if arrayVccs#unless arrayVccs.nil?
      arrayVccs.each do |vccsArray|
        vccs = Vcc.new
        vccs.vulnerability_name = cve
        vccs.file_name = fileArray
        key = vccsArray.keys[0]
        vccs.commit_hash = key
        if vccsArray[key]["note"]
          vccs.note =  vccsArray[key]["note"]
        end
        vccs.save
      end
    end
end
